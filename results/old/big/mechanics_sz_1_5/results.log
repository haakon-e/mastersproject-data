INFO:GTS.isc_modelling.setup:Preparing setup for mechanics simulation on 2020-01-31T10:24:29+01:00
INFO:GTS.isc_modelling.setup:Visualization folder path: 
 /home/haakon/mastersproject/src/mastersproject/GTS/isc_modelling/results/big/mechanics_sz_1_5
INFO:GTS.isc_modelling.setup:Root file name of results: main_run
INFO:GTS.isc_modelling.setup:Mesh arguments: 
 {'mesh_size_frac': 1.5, 'mesh_size_min': 0.15000000000000002, 'mesh_size_bound': 9.0}
INFO:GTS.isc_modelling.setup:Bounding box: 
 {'xmin': -6, 'xmax': 80, 'ymin': 55, 'ymax': 150, 'zmin': 0, 'zmax': 50}
INFO:GTS.isc_modelling.setup:Shear zones in simulation: 
 ['S1_1', 'S1_2', 'S1_3', 'S3_1', 'S3_2']
INFO:GTS.isc_modelling.setup:Variable scaling: 
 {'scalar_scale': 1, 'length_scale': 1}
INFO:GTS.isc_modelling.setup:Solver type: direct
INFO:GTS.isc_modelling.setup:Stress tensor: 
 [[11393046.22034133  -597621.26708787 -1842573.57669909]
 [ -597621.26708787  8873267.78285116   586150.35104884]
 [-1842573.57669909   586150.35104884 10733685.99680752]]
INFO:GTS.isc_modelling.mechanics:Running: contact mechanics on ISC dataset
INFO:GTS.ISC_data.isc:Data located at: /home/haakon/mastersproject/src/mastersproject/GTS/01BasicInputData.
INFO:GTS.isc_modelling.setup:Options for Newton solver: 
 {'max_iterations': 10, 'convergence_tol': 1e-10, 'divergence_tol': 100000.0}
INFO:GTS.isc_modelling.setup:Setup complete. Starting simulation
INFO:GTS.ISC_data.isc:Data located at: /home/haakon/mastersproject/src/mastersproject/GTS/01BasicInputData.
INFO:GTS.ISC_data.fracture:Interpolating shearzone S1_1 ...
INFO:root:Sum of pointwise relative errors: 0.0724
INFO:GTS.ISC_data.fracture:Interpolating shearzone S1_2 ...
INFO:root:Sum of pointwise relative errors: 0.1129
INFO:GTS.ISC_data.fracture:Interpolating shearzone S1_3 ...
INFO:root:Sum of pointwise relative errors: 0.0917
INFO:GTS.ISC_data.fracture:Interpolating shearzone S3_1 ...
INFO:root:Sum of pointwise relative errors: 0.0375
INFO:GTS.ISC_data.fracture:Interpolating shearzone S3_2 ...
INFO:root:Sum of pointwise relative errors: 0.0840
INFO:GTS.ISC_data.fracture:Saving vtk file of fracture network in 3D.
INFO:porepy.fracs.fractures:Find intersection between fratures
INFO:porepy.fracs.fractures:Found 18 intersections. Ellapsed time: 0.02228
INFO:porepy.fracs.fractures:Split intersections
INFO:porepy.fracs.fractures:Compile list of points and edges
INFO:porepy.fracs.fractures:Points and edges done. Elapsed time 0.00080
INFO:porepy.fracs.fractures:Uniquify points and edges, starting with 90 points, 72
                    edges
INFO:porepy.fracs.fractures:Uniquify complete. 50 points, 48 edges. Ellapsed time
                    0.02576
INFO:porepy.fracs.fractures:Remove edge intersections
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 0
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 1
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 2
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 3
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 4
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:The segments are parallel
DEBUG:porepy.geometry.intersections:Lines are colinear
DEBUG:porepy.geometry.intersections:Colinear lines share a single point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 5
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 6
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 7
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 8
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 9
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.fracs.fractures:Remove intersections from fracture 10
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
DEBUG:porepy.geometry.intersections:Segment intersection found in one point
INFO:porepy.fracs.fractures:Done with intersection removal. Elapsed time 0.11028
INFO:porepy.fracs.fractures:Uniquify points and edges, starting with 50 points, 60
                    edges
INFO:porepy.fracs.fractures:Uniquify complete. 50 points, 60 edges. Ellapsed time
                    0.02480
INFO:porepy.fracs.fractures:Finished fracture splitting after 0.18416 seconds
INFO:porepy.fracs.fractures:Minimal distance between points encountered is 0.16754808085175546
INFO:porepy.fracs.fractures:Gmsh completed with status 0
INFO:porepy.fracs.simplex:Grid creation completed. Elapsed time 1.171746015548706
INFO:porepy.fracs.simplex:Created 1 3-d grids with 86229 cells
INFO:porepy.fracs.simplex:Created 5 2-d grids with 11348 cells
INFO:porepy.fracs.simplex:Created 6 1-d grids with 97 cells
INFO:porepy.fracs.meshing:Assemble in bucket
INFO:porepy.fracs.meshing:Done. Elapsed time 1.8216023445129395
INFO:porepy.fracs.meshing:Compute geometry
INFO:porepy.fracs.meshing:Done. Elapsed time 0.8569474220275879
INFO:porepy.fracs.meshing:Split fractures
INFO:porepy.fracs.meshing:Done. Elapsed time 22.303333520889282
INFO:porepy.models.contact_mechanics_model:Discretize
INFO:porepy.numerics.fv.mpsa:Split MPSA discretization into 2 parts
DEBUG:porepy.numerics.fv.mpsa:number of ncasym eliminated: 1116
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=374)
           2	LOAD_GLOBAL(arg=0, lineno=374)
           4	LOAD_ATTR(arg=1, lineno=374)
           6	LOAD_FAST(arg=3, lineno=374)
           8	LOAD_ATTR(arg=2, lineno=374)
          10	LOAD_GLOBAL(arg=0, lineno=374)
          12	LOAD_ATTR(arg=3, lineno=374)
          14	LOAD_CONST(arg=1, lineno=374)
          16	CALL_FUNCTION_KW(arg=2, lineno=374)
          18	STORE_FAST(arg=4, lineno=374)
          20	LOAD_GLOBAL(arg=0, lineno=375)
          22	LOAD_METHOD(arg=4, lineno=375)
          24	LOAD_FAST(arg=3, lineno=375)
          26	LOAD_CONST(arg=2, lineno=375)
          28	LOAD_CONST(arg=3, lineno=375)
          30	BUILD_SLICE(arg=2, lineno=375)
          32	BINARY_SUBSCR(arg=None, lineno=375)
          34	CALL_METHOD(arg=1, lineno=375)
          36	LOAD_FAST(arg=4, lineno=375)
          38	LOAD_CONST(arg=4, lineno=375)
          40	LOAD_CONST(arg=2, lineno=375)
          42	BUILD_SLICE(arg=2, lineno=375)
          44	STORE_SUBSCR(arg=None, lineno=375)
          46	LOAD_FAST(arg=0, lineno=379)
          48	LOAD_CONST(arg=4, lineno=379)
          50	LOAD_CONST(arg=2, lineno=379)
          52	BUILD_SLICE(arg=2, lineno=379)
          54	BINARY_SUBSCR(arg=None, lineno=379)
          56	LOAD_FAST(arg=0, lineno=379)
          58	LOAD_CONST(arg=5, lineno=379)
          60	LOAD_CONST(arg=3, lineno=379)
          62	BUILD_SLICE(arg=2, lineno=379)
          64	BINARY_SUBSCR(arg=None, lineno=379)
          66	BINARY_SUBTRACT(arg=None, lineno=379)
          68	STORE_FAST(arg=5, lineno=379)
          70	LOAD_GLOBAL(arg=0, lineno=383)
          72	LOAD_ATTR(arg=1, lineno=383)
          74	LOAD_FAST(arg=5, lineno=383)
          76	LOAD_ATTR(arg=2, lineno=383)
          78	LOAD_CONST(arg=4, lineno=383)
          80	BINARY_ADD(arg=None, lineno=383)
          82	LOAD_GLOBAL(arg=0, lineno=383)
          84	LOAD_ATTR(arg=3, lineno=383)
          86	LOAD_CONST(arg=1, lineno=383)
          88	CALL_FUNCTION_KW(arg=2, lineno=383)
          90	STORE_FAST(arg=6, lineno=383)
          92	LOAD_GLOBAL(arg=0, lineno=384)
          94	LOAD_METHOD(arg=4, lineno=384)
          96	LOAD_FAST(arg=5, lineno=384)
          98	CALL_METHOD(arg=1, lineno=384)
         100	LOAD_FAST(arg=6, lineno=384)
         102	LOAD_CONST(arg=4, lineno=384)
         104	LOAD_CONST(arg=2, lineno=384)
         106	BUILD_SLICE(arg=2, lineno=384)
         108	STORE_SUBSCR(arg=None, lineno=384)
         110	LOAD_GLOBAL(arg=0, lineno=390)
         112	LOAD_ATTR(arg=1, lineno=390)
         114	LOAD_FAST(arg=3, lineno=390)
         116	LOAD_ATTR(arg=2, lineno=390)
         118	LOAD_CONST(arg=4, lineno=390)
         120	BINARY_ADD(arg=None, lineno=390)
         122	LOAD_GLOBAL(arg=0, lineno=390)
         124	LOAD_ATTR(arg=3, lineno=390)
         126	LOAD_CONST(arg=1, lineno=390)
         128	CALL_FUNCTION_KW(arg=2, lineno=390)
         130	STORE_FAST(arg=7, lineno=390)
         132	LOAD_GLOBAL(arg=0, lineno=391)
         134	LOAD_METHOD(arg=4, lineno=391)
         136	LOAD_GLOBAL(arg=0, lineno=391)
         138	LOAD_METHOD(arg=5, lineno=391)
         140	LOAD_FAST(arg=3, lineno=391)
         142	CALL_METHOD(arg=1, lineno=391)
         144	CALL_METHOD(arg=1, lineno=391)
         146	LOAD_FAST(arg=7, lineno=391)
         148	LOAD_CONST(arg=4, lineno=391)
         150	LOAD_CONST(arg=2, lineno=391)
         152	BUILD_SLICE(arg=2, lineno=391)
         154	STORE_SUBSCR(arg=None, lineno=391)
         156	LOAD_GLOBAL(arg=0, lineno=393)
         158	LOAD_METHOD(arg=1, lineno=393)
         160	LOAD_GLOBAL(arg=0, lineno=393)
         162	LOAD_METHOD(arg=6, lineno=393)
         164	LOAD_GLOBAL(arg=0, lineno=393)
         166	LOAD_METHOD(arg=5, lineno=393)
         168	LOAD_FAST(arg=3, lineno=393)
         170	CALL_METHOD(arg=1, lineno=393)
         172	CALL_METHOD(arg=1, lineno=393)
         174	CALL_METHOD(arg=1, lineno=393)
         176	STORE_FAST(arg=8, lineno=393)
         178	SETUP_LOOP(arg=200, lineno=396)
         180	LOAD_GLOBAL(arg=7, lineno=396)
         182	LOAD_FAST(arg=3, lineno=396)
         184	LOAD_ATTR(arg=2, lineno=396)
         186	CALL_FUNCTION(arg=1, lineno=396)
         188	GET_ITER(arg=None, lineno=396)
>        190	FOR_ITER(arg=186, lineno=396)
         192	STORE_FAST(arg=9, lineno=396)
         194	LOAD_FAST(arg=3, lineno=397)
         196	LOAD_FAST(arg=9, lineno=397)
         198	BINARY_SUBSCR(arg=None, lineno=397)
         200	STORE_FAST(arg=10, lineno=397)
         202	LOAD_GLOBAL(arg=0, lineno=398)
         204	LOAD_METHOD(arg=1, lineno=398)
         206	LOAD_FAST(arg=10, lineno=398)
         208	LOAD_FAST(arg=10, lineno=398)
         210	BUILD_TUPLE(arg=2, lineno=398)
         212	CALL_METHOD(arg=1, lineno=398)
         214	STORE_FAST(arg=11, lineno=398)
         216	SETUP_LOOP(arg=108, lineno=400)
         218	LOAD_GLOBAL(arg=7, lineno=400)
         220	LOAD_FAST(arg=10, lineno=400)
         222	CALL_FUNCTION(arg=1, lineno=400)
         224	GET_ITER(arg=None, lineno=400)
>        226	FOR_ITER(arg=96, lineno=400)
         228	STORE_FAST(arg=12, lineno=400)
         230	LOAD_FAST(arg=4, lineno=401)
         232	LOAD_FAST(arg=9, lineno=401)
         234	BINARY_SUBSCR(arg=None, lineno=401)
         236	LOAD_FAST(arg=12, lineno=401)
         238	BINARY_ADD(arg=None, lineno=401)
         240	STORE_FAST(arg=13, lineno=401)
         242	LOAD_FAST(arg=6, lineno=402)
         244	LOAD_FAST(arg=13, lineno=402)
         246	BINARY_SUBSCR(arg=None, lineno=402)
         248	STORE_FAST(arg=14, lineno=402)
         250	SETUP_LOOP(arg=70, lineno=406)
         252	LOAD_GLOBAL(arg=7, lineno=406)
         254	LOAD_FAST(arg=5, lineno=407)
         256	LOAD_FAST(arg=12, lineno=407)
         258	LOAD_FAST(arg=4, lineno=407)
         260	LOAD_FAST(arg=9, lineno=407)
         262	BINARY_SUBSCR(arg=None, lineno=407)
         264	BINARY_ADD(arg=None, lineno=407)
         266	BINARY_SUBSCR(arg=None, lineno=407)
         268	CALL_FUNCTION(arg=1, lineno=407)
         270	GET_ITER(arg=None, lineno=407)
>        272	FOR_ITER(arg=46, lineno=407)
         274	STORE_FAST(arg=15, lineno=407)
         276	LOAD_FAST(arg=1, lineno=409)
         278	LOAD_FAST(arg=14, lineno=409)
         280	BINARY_SUBSCR(arg=None, lineno=409)
         282	LOAD_FAST(arg=4, lineno=409)
         284	LOAD_FAST(arg=9, lineno=409)
         286	BINARY_SUBSCR(arg=None, lineno=409)
         288	BINARY_SUBTRACT(arg=None, lineno=409)
         290	STORE_FAST(arg=16, lineno=409)
         292	LOAD_FAST(arg=2, lineno=410)
         294	LOAD_FAST(arg=14, lineno=410)
         296	BINARY_SUBSCR(arg=None, lineno=410)
         298	LOAD_FAST(arg=11, lineno=410)
         300	LOAD_FAST(arg=12, lineno=410)
         302	LOAD_FAST(arg=16, lineno=410)
         304	BUILD_TUPLE(arg=2, lineno=410)
         306	STORE_SUBSCR(arg=None, lineno=410)
         308	LOAD_FAST(arg=14, lineno=411)
         310	LOAD_CONST(arg=4, lineno=411)
         312	INPLACE_ADD(arg=None, lineno=411)
         314	STORE_FAST(arg=14, lineno=411)
         316	JUMP_ABSOLUTE(arg=272, lineno=411)
>        320	POP_BLOCK(arg=None, lineno=411)
>        322	JUMP_ABSOLUTE(arg=226, lineno=411)
>        324	POP_BLOCK(arg=None, lineno=411)
>        326	LOAD_GLOBAL(arg=0, lineno=416)
         328	LOAD_METHOD(arg=8, lineno=416)
         330	LOAD_GLOBAL(arg=0, lineno=416)
         332	LOAD_ATTR(arg=9, lineno=416)
         334	LOAD_METHOD(arg=10, lineno=416)
         336	LOAD_FAST(arg=11, lineno=416)
         338	CALL_METHOD(arg=1, lineno=416)
         340	CALL_METHOD(arg=1, lineno=416)
         342	STORE_FAST(arg=17, lineno=416)
         344	LOAD_GLOBAL(arg=0, lineno=418)
         346	LOAD_METHOD(arg=11, lineno=418)
         348	LOAD_FAST(arg=7, lineno=419)
         350	LOAD_FAST(arg=9, lineno=419)
         352	BINARY_SUBSCR(arg=None, lineno=419)
         354	LOAD_FAST(arg=7, lineno=419)
         356	LOAD_FAST(arg=9, lineno=419)
         358	LOAD_CONST(arg=4, lineno=419)
         360	BINARY_ADD(arg=None, lineno=419)
         362	BINARY_SUBSCR(arg=None, lineno=419)
         364	CALL_METHOD(arg=2, lineno=419)
         366	STORE_FAST(arg=18, lineno=419)
         368	LOAD_FAST(arg=17, lineno=421)
         370	LOAD_FAST(arg=8, lineno=421)
         372	LOAD_FAST(arg=18, lineno=421)
         374	STORE_SUBSCR(arg=None, lineno=421)
         376	JUMP_ABSOLUTE(arg=190, lineno=421)
>        378	POP_BLOCK(arg=None, lineno=421)
>        380	LOAD_FAST(arg=8, lineno=423)
         382	RETURN_VALUE(arg=None, lineno=423)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=374)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=374)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=3, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$sz6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=3, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$10load_global.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12load_attr.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=CALL_FUNCTION_KW(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12load_attr.5', '$const14.6']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=374)
DEBUG:numba.byteflow:stack ['$16call_function_kw.7']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=0, lineno=375)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$20load_global.8']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10']
DEBUG:numba.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$const26.11']
DEBUG:numba.byteflow:dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$const26.11', '$const28.12']
DEBUG:numba.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$30build_slice.14']
DEBUG:numba.byteflow:dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$32binary_subscr.15']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16']
DEBUG:numba.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$const38.18']
DEBUG:numba.byteflow:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$const38.18', '$const40.19']
DEBUG:numba.byteflow:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$42build_slice.21']
DEBUG:numba.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=4, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$const48.23']
DEBUG:numba.byteflow:dispatch pc=52, inst=BUILD_SLICE(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$const48.23', '$const50.24']
DEBUG:numba.byteflow:dispatch pc=54, inst=BINARY_SUBSCR(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$52build_slice.26']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27']
DEBUG:numba.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=5, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$const58.29']
DEBUG:numba.byteflow:dispatch pc=62, inst=BUILD_SLICE(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$const58.29', '$const60.30']
DEBUG:numba.byteflow:dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$62build_slice.32']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$64binary_subscr.33']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=5, lineno=379)
DEBUG:numba.byteflow:stack ['$66binary_subtract.34']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=0, lineno=383)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=1, lineno=383)
DEBUG:numba.byteflow:stack ['$70load_global.35']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36']
DEBUG:numba.byteflow:dispatch pc=76, inst=LOAD_ATTR(arg=2, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$num_cols_per_row74.37']
DEBUG:numba.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=4, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$76load_attr.38']
DEBUG:numba.byteflow:dispatch pc=80, inst=BINARY_ADD(arg=None, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$76load_attr.38', '$const78.39']
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=3, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$82load_global.41']
DEBUG:numba.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=1, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42']
DEBUG:numba.byteflow:dispatch pc=88, inst=CALL_FUNCTION_KW(arg=2, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42', '$const86.43']
DEBUG:numba.byteflow:dispatch pc=90, inst=STORE_FAST(arg=6, lineno=383)
DEBUG:numba.byteflow:stack ['$88call_function_kw.44']
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_GLOBAL(arg=0, lineno=384)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_METHOD(arg=4, lineno=384)
DEBUG:numba.byteflow:stack ['$92load_global.45']
DEBUG:numba.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=384)
DEBUG:numba.byteflow:stack ['$94load_method.46']
DEBUG:numba.byteflow:dispatch pc=98, inst=CALL_METHOD(arg=1, lineno=384)
DEBUG:numba.byteflow:stack ['$94load_method.46', '$num_cols_per_row96.47']
DEBUG:numba.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=6, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48']
DEBUG:numba.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=4, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49']
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$const102.50']
DEBUG:numba.byteflow:dispatch pc=106, inst=BUILD_SLICE(arg=2, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$const102.50', '$const104.51']
DEBUG:numba.byteflow:dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$106build_slice.53']
DEBUG:numba.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=390)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=112, inst=LOAD_ATTR(arg=1, lineno=390)
DEBUG:numba.byteflow:stack ['$110load_global.54']
DEBUG:numba.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55']
DEBUG:numba.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=2, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$sz114.56']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=4, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$116load_attr.57']
DEBUG:numba.byteflow:dispatch pc=120, inst=BINARY_ADD(arg=None, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$116load_attr.57', '$const118.58']
DEBUG:numba.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=0, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59']
DEBUG:numba.byteflow:dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$122load_global.60']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61']
DEBUG:numba.byteflow:dispatch pc=128, inst=CALL_FUNCTION_KW(arg=2, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61', '$const126.62']
DEBUG:numba.byteflow:dispatch pc=130, inst=STORE_FAST(arg=7, lineno=390)
DEBUG:numba.byteflow:stack ['$128call_function_kw.63']
DEBUG:numba.byteflow:dispatch pc=132, inst=LOAD_GLOBAL(arg=0, lineno=391)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=134, inst=LOAD_METHOD(arg=4, lineno=391)
DEBUG:numba.byteflow:stack ['$132load_global.64']
DEBUG:numba.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=0, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_METHOD(arg=5, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$136load_global.66']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$138load_method.67']
DEBUG:numba.byteflow:dispatch pc=142, inst=CALL_METHOD(arg=1, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$138load_method.67', '$sz140.68']
DEBUG:numba.byteflow:dispatch pc=144, inst=CALL_METHOD(arg=1, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$142call_method.69']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=7, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71']
DEBUG:numba.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=2, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$const148.72']
DEBUG:numba.byteflow:dispatch pc=152, inst=BUILD_SLICE(arg=2, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$const148.72', '$const150.73']
DEBUG:numba.byteflow:dispatch pc=154, inst=STORE_SUBSCR(arg=None, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$152build_slice.75']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=158, inst=LOAD_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$156load_global.76']
DEBUG:numba.byteflow:dispatch pc=160, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_METHOD(arg=6, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$160load_global.78']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_METHOD(arg=5, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$164load_global.80']
DEBUG:numba.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=3, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$166load_method.81']
DEBUG:numba.byteflow:dispatch pc=170, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$166load_method.81', '$sz168.82']
DEBUG:numba.byteflow:dispatch pc=172, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$170call_method.83']
DEBUG:numba.byteflow:dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$172call_method.84']
DEBUG:numba.byteflow:dispatch pc=176, inst=STORE_FAST(arg=8, lineno=393)
DEBUG:numba.byteflow:stack ['$174call_method.85']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=178, inst=SETUP_LOOP(arg=200, lineno=396)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=7, lineno=396)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=LOAD_ATTR(arg=2, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0', '$sz182.1']
DEBUG:numba.byteflow:dispatch pc=186, inst=CALL_FUNCTION(arg=1, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0', '$184load_attr.2']
DEBUG:numba.byteflow:dispatch pc=188, inst=GET_ITER(arg=None, lineno=396)
DEBUG:numba.byteflow:stack ['$186call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=190, stack=('$188get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=190 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi190.0']
DEBUG:numba.byteflow:dispatch pc=190, inst=FOR_ITER(arg=186, lineno=396)
DEBUG:numba.byteflow:stack ['$phi190.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=378, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=192, stack=('$phi190.0', '$190for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=192 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=378, inst=POP_BLOCK(arg=None, lineno=421)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=380, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=192 nstack_initial=2), State(pc_initial=380 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi192.0', '$phi192.1']
DEBUG:numba.byteflow:dispatch pc=192, inst=STORE_FAST(arg=9, lineno=396)
DEBUG:numba.byteflow:stack ['$phi192.0', '$phi192.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0']
DEBUG:numba.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=9, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$sz194.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$sz194.2', '$iter1196.3']
DEBUG:numba.byteflow:dispatch pc=200, inst=STORE_FAST(arg=10, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$198binary_subscr.4']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=0, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_METHOD(arg=1, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$202load_global.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=10, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=10, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$n206.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BUILD_TUPLE(arg=2, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$n206.7', '$n208.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=CALL_METHOD(arg=1, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$210build_tuple.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=STORE_FAST(arg=11, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$212call_method.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=216, stack=('$phi192.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=380 nstack_initial=0), State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=8, lineno=423)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=382, inst=RETURN_VALUE(arg=None, lineno=423)
DEBUG:numba.byteflow:stack ['$inv_vals380.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=216, inst=SETUP_LOOP(arg=108, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_GLOBAL(arg=7, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=10, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$218load_global.1']
DEBUG:numba.byteflow:dispatch pc=222, inst=CALL_FUNCTION(arg=1, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$218load_global.1', '$n220.2']
DEBUG:numba.byteflow:dispatch pc=224, inst=GET_ITER(arg=None, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$222call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=226, stack=('$phi216.0', '$224get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi226.0', '$phi226.1']
DEBUG:numba.byteflow:dispatch pc=226, inst=FOR_ITER(arg=96, lineno=400)
DEBUG:numba.byteflow:stack ['$phi226.0', '$phi226.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=324, stack=('$phi226.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=228, stack=('$phi226.0', '$phi226.1', '$226for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=324 nstack_initial=1), State(pc_initial=228 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi324.0']
DEBUG:numba.byteflow:dispatch pc=324, inst=POP_BLOCK(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi324.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=326, stack=('$phi324.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=228 nstack_initial=3), State(pc_initial=326 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi228.0', '$phi228.1', '$phi228.2']
DEBUG:numba.byteflow:dispatch pc=228, inst=STORE_FAST(arg=12, lineno=400)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$phi228.2']
DEBUG:numba.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1']
DEBUG:numba.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$block_row_starts_ind230.3']
DEBUG:numba.byteflow:dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$block_row_starts_ind230.3', '$iter1232.4']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=12, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$234binary_subscr.5']
DEBUG:numba.byteflow:dispatch pc=238, inst=BINARY_ADD(arg=None, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$234binary_subscr.5', '$iter2236.6']
DEBUG:numba.byteflow:dispatch pc=240, inst=STORE_FAST(arg=13, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$238binary_add.7']
DEBUG:numba.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=6, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1']
DEBUG:numba.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=13, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$row_cols_start_ind242.8']
DEBUG:numba.byteflow:dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$row_cols_start_ind242.8', '$global_row244.9']
DEBUG:numba.byteflow:dispatch pc=248, inst=STORE_FAST(arg=14, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$246binary_subscr.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=250, stack=('$phi228.0', '$phi228.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=326 nstack_initial=1), State(pc_initial=250 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_GLOBAL(arg=0, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_METHOD(arg=8, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$326load_global.1']
DEBUG:numba.byteflow:dispatch pc=330, inst=LOAD_GLOBAL(arg=0, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=9, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$330load_global.3']
DEBUG:numba.byteflow:dispatch pc=334, inst=LOAD_METHOD(arg=10, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$332load_attr.4']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=11, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$334load_method.5']
DEBUG:numba.byteflow:dispatch pc=338, inst=CALL_METHOD(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$334load_method.5', '$loc_mat336.6']
DEBUG:numba.byteflow:dispatch pc=340, inst=CALL_METHOD(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$338call_method.7']
DEBUG:numba.byteflow:dispatch pc=342, inst=STORE_FAST(arg=17, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$340call_method.8']
DEBUG:numba.byteflow:dispatch pc=344, inst=LOAD_GLOBAL(arg=0, lineno=418)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=346, inst=LOAD_METHOD(arg=11, lineno=418)
DEBUG:numba.byteflow:stack ['$phi326.0', '$344load_global.9']
DEBUG:numba.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=7, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10']
DEBUG:numba.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=9, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$full_block_starts_ind348.11']
DEBUG:numba.byteflow:dispatch pc=352, inst=BINARY_SUBSCR(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$full_block_starts_ind348.11', '$iter1350.12']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=7, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13']
DEBUG:numba.byteflow:dispatch pc=356, inst=LOAD_FAST(arg=9, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14']
DEBUG:numba.byteflow:dispatch pc=358, inst=LOAD_CONST(arg=4, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$iter1356.15']
DEBUG:numba.byteflow:dispatch pc=360, inst=BINARY_ADD(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$iter1356.15', '$const358.16']
DEBUG:numba.byteflow:dispatch pc=362, inst=BINARY_SUBSCR(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$360binary_add.17']
DEBUG:numba.byteflow:dispatch pc=364, inst=CALL_METHOD(arg=2, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$362binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=366, inst=STORE_FAST(arg=18, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$364call_method.19']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=17, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20']
DEBUG:numba.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=18, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20', '$inv_vals370.21']
DEBUG:numba.byteflow:dispatch pc=374, inst=STORE_SUBSCR(arg=None, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20', '$inv_vals370.21', '$loc_ind372.22']
DEBUG:numba.byteflow:dispatch pc=376, inst=JUMP_ABSOLUTE(arg=190, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=190, stack=('$phi326.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=250 nstack_initial=2), State(pc_initial=190 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=250, inst=SETUP_LOOP(arg=70, lineno=406)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_GLOBAL(arg=7, lineno=406)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=5, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2']
DEBUG:numba.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=12, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3']
DEBUG:numba.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=9, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$block_row_starts_ind258.5']
DEBUG:numba.byteflow:dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$block_row_starts_ind258.5', '$iter1260.6']
DEBUG:numba.byteflow:dispatch pc=264, inst=BINARY_ADD(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$262binary_subscr.7']
DEBUG:numba.byteflow:dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$264binary_add.8']
DEBUG:numba.byteflow:dispatch pc=268, inst=CALL_FUNCTION(arg=1, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$266binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=270, inst=GET_ITER(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$268call_function.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=272, stack=('$phi250.0', '$phi250.1', '$270get_iter.11'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=190 nstack_initial=1), State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi272.0', '$phi272.1', '$phi272.2']
DEBUG:numba.byteflow:dispatch pc=272, inst=FOR_ITER(arg=46, lineno=407)
DEBUG:numba.byteflow:stack ['$phi272.0', '$phi272.1', '$phi272.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=320, stack=('$phi272.0', '$phi272.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=274, stack=('$phi272.0', '$phi272.1', '$phi272.2', '$272for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=320 nstack_initial=2), State(pc_initial=274 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi320.0', '$phi320.1']
DEBUG:numba.byteflow:dispatch pc=320, inst=POP_BLOCK(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi320.0', '$phi320.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=322, stack=('$phi320.0', '$phi320.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=274 nstack_initial=4), State(pc_initial=322 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi274.0', '$phi274.1', '$phi274.2', '$phi274.3']
DEBUG:numba.byteflow:dispatch pc=274, inst=STORE_FAST(arg=15, lineno=407)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$phi274.3']
DEBUG:numba.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=1, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=278, inst=LOAD_FAST(arg=14, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$ind276.4']
DEBUG:numba.byteflow:dispatch pc=280, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$ind276.4', '$data_counter278.5']
DEBUG:numba.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6']
DEBUG:numba.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=9, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$block_row_starts_ind282.7']
DEBUG:numba.byteflow:dispatch pc=286, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$block_row_starts_ind282.7', '$iter1284.8']
DEBUG:numba.byteflow:dispatch pc=288, inst=BINARY_SUBTRACT(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$286binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=290, inst=STORE_FAST(arg=16, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$288binary_subtract.10']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=14, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data292.11']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBSCR(arg=None, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data292.11', '$data_counter294.12']
DEBUG:numba.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=11, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=12, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=16, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$iter2300.15']
DEBUG:numba.byteflow:dispatch pc=304, inst=BUILD_TUPLE(arg=2, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$iter2300.15', '$loc_col302.16']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$304build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=14, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_CONST(arg=4, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data_counter308.18']
DEBUG:numba.byteflow:dispatch pc=312, inst=INPLACE_ADD(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data_counter308.18', '$const310.19']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=14, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$312inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=316, inst=JUMP_ABSOLUTE(arg=272, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=272, stack=('$phi274.0', '$phi274.1', '$phi274.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=322 nstack_initial=2), State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi322.0', '$phi322.1']
DEBUG:numba.byteflow:dispatch pc=322, inst=JUMP_ABSOLUTE(arg=226, lineno=411)
DEBUG:numba.byteflow:stack ['$phi322.0', '$phi322.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=226, stack=('$phi322.0', '$phi322.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=272 nstack_initial=3), State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=320 nstack_initial=2): set(),
             State(pc_initial=274 nstack_initial=4): {'$phi274.3'},
             State(pc_initial=272 nstack_initial=3): {'$phi272.2'},
             State(pc_initial=250 nstack_initial=2): set(),
             State(pc_initial=322 nstack_initial=2): set(),
             State(pc_initial=380 nstack_initial=0): set(),
             State(pc_initial=326 nstack_initial=1): set(),
             State(pc_initial=324 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=2): {'$phi226.1'},
             State(pc_initial=192 nstack_initial=2): {'$phi192.1'},
             State(pc_initial=216 nstack_initial=1): set(),
             State(pc_initial=228 nstack_initial=3): {'$phi228.2'},
             State(pc_initial=378 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=1): {'$phi190.0'},
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi190.0': State(pc_initial=178 nstack_initial=0),
 '$phi192.1': State(pc_initial=190 nstack_initial=1),
 '$phi226.1': State(pc_initial=216 nstack_initial=1),
 '$phi228.2': State(pc_initial=226 nstack_initial=2),
 '$phi272.2': State(pc_initial=250 nstack_initial=2),
 '$phi274.3': State(pc_initial=272 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi326.0',
                            State(pc_initial=326 nstack_initial=1))},
             '$phi192.0': {('$phi190.0',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$phi192.0',
                            State(pc_initial=192 nstack_initial=2))},
             '$phi226.0': {('$phi216.0',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi322.0',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi322.1',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi228.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi228.1': {('$phi226.1',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=3))},
             '$phi250.1': {('$phi228.1',
                            State(pc_initial=228 nstack_initial=3))},
             '$phi272.0': {('$phi250.0',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.0',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi272.1': {('$phi250.1',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.1',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.2',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi274.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.1': {('$phi272.1',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.2': {('$phi272.2',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.1': {('$phi272.1',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi322.0': {('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.1': {('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi324.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi326.0': {('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi272.0',
                            State(pc_initial=272 nstack_initial=3)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi272.1',
                            State(pc_initial=272 nstack_initial=3)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi272.2',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi190.0': {('$188get_iter.4', State(pc_initial=178 nstack_initial=0))},
 '$phi192.1': {('$190for_iter.2', State(pc_initial=190 nstack_initial=1))},
 '$phi226.1': {('$224get_iter.4', State(pc_initial=216 nstack_initial=1))},
 '$phi228.2': {('$226for_iter.3', State(pc_initial=226 nstack_initial=2))},
 '$phi272.2': {('$270get_iter.11', State(pc_initial=250 nstack_initial=2))},
 '$phi274.3': {('$272for_iter.4', State(pc_initial=272 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=272 nstack_initial=3): {'$phi274.3': '$272for_iter.4'},
             State(pc_initial=250 nstack_initial=2): {'$phi272.2': '$270get_iter.11'},
             State(pc_initial=226 nstack_initial=2): {'$phi228.2': '$226for_iter.3'},
             State(pc_initial=216 nstack_initial=1): {'$phi226.1': '$224get_iter.4'},
             State(pc_initial=190 nstack_initial=1): {'$phi192.1': '$190for_iter.2'},
             State(pc_initial=178 nstack_initial=0): {'$phi190.0': '$188get_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$sz6.2'}), (8, {'item': '$sz6.2', 'res': '$8load_attr.3'}), (10, {'res': '$10load_global.4'}), (12, {'item': '$10load_global.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'func': '$4load_attr.1', 'args': ['$8load_attr.3', '$12load_attr.5'], 'names': '$const14.6', 'res': '$16call_function_kw.7'}), (18, {'value': '$16call_function_kw.7'}), (20, {'res': '$20load_global.8'}), (22, {'item': '$20load_global.8', 'res': '$22load_method.9'}), (24, {'res': '$sz24.10'}), (26, {'res': '$const26.11'}), (28, {'res': '$const28.12'}), (30, {'start': '$const26.11', 'stop': '$const28.12', 'step': None, 'res': '$30build_slice.14', 'slicevar': '$30build_slice.13'}), (32, {'index': '$30build_slice.14', 'target': '$sz24.10', 'res': '$32binary_subscr.15'}), (34, {'func': '$22load_method.9', 'args': ['$32binary_subscr.15'], 'res': '$34call_method.16'}), (36, {'res': '$block_row_starts_ind36.17'}), (38, {'res': '$const38.18'}), (40, {'res': '$const40.19'}), (42, {'start': '$const38.18', 'stop': '$const40.19', 'step': None, 'res': '$42build_slice.21', 'slicevar': '$42build_slice.20'}), (44, {'target': '$block_row_starts_ind36.17', 'index': '$42build_slice.21', 'value': '$34call_method.16'}), (46, {'res': '$indptr46.22'}), (48, {'res': '$const48.23'}), (50, {'res': '$const50.24'}), (52, {'start': '$const48.23', 'stop': '$const50.24', 'step': None, 'res': '$52build_slice.26', 'slicevar': '$52build_slice.25'}), (54, {'index': '$52build_slice.26', 'target': '$indptr46.22', 'res': '$54binary_subscr.27'}), (56, {'res': '$indptr56.28'}), (58, {'res': '$const58.29'}), (60, {'res': '$const60.30'}), (62, {'start': '$const58.29', 'stop': '$const60.30', 'step': None, 'res': '$62build_slice.32', 'slicevar': '$62build_slice.31'}), (64, {'index': '$62build_slice.32', 'target': '$indptr56.28', 'res': '$64binary_subscr.33'}), (66, {'lhs': '$54binary_subscr.27', 'rhs': '$64binary_subscr.33', 'res': '$66binary_subtract.34'}), (68, {'value': '$66binary_subtract.34'}), (70, {'res': '$70load_global.35'}), (72, {'item': '$70load_global.35', 'res': '$72load_attr.36'}), (74, {'res': '$num_cols_per_row74.37'}), (76, {'item': '$num_cols_per_row74.37', 'res': '$76load_attr.38'}), (78, {'res': '$const78.39'}), (80, {'lhs': '$76load_attr.38', 'rhs': '$const78.39', 'res': '$80binary_add.40'}), (82, {'res': '$82load_global.41'}), (84, {'item': '$82load_global.41', 'res': '$84load_attr.42'}), (86, {'res': '$const86.43'}), (88, {'func': '$72load_attr.36', 'args': ['$80binary_add.40', '$84load_attr.42'], 'names': '$const86.43', 'res': '$88call_function_kw.44'}), (90, {'value': '$88call_function_kw.44'}), (92, {'res': '$92load_global.45'}), (94, {'item': '$92load_global.45', 'res': '$94load_method.46'}), (96, {'res': '$num_cols_per_row96.47'}), (98, {'func': '$94load_method.46', 'args': ['$num_cols_per_row96.47'], 'res': '$98call_method.48'}), (100, {'res': '$row_cols_start_ind100.49'}), (102, {'res': '$const102.50'}), (104, {'res': '$const104.51'}), (106, {'start': '$const102.50', 'stop': '$const104.51', 'step': None, 'res': '$106build_slice.53', 'slicevar': '$106build_slice.52'}), (108, {'target': '$row_cols_start_ind100.49', 'index': '$106build_slice.53', 'value': '$98call_method.48'}), (110, {'res': '$110load_global.54'}), (112, {'item': '$110load_global.54', 'res': '$112load_attr.55'}), (114, {'res': '$sz114.56'}), (116, {'item': '$sz114.56', 'res': '$116load_attr.57'}), (118, {'res': '$const118.58'}), (120, {'lhs': '$116load_attr.57', 'rhs': '$const118.58', 'res': '$120binary_add.59'}), (122, {'res': '$122load_global.60'}), (124, {'item': '$122load_global.60', 'res': '$124load_attr.61'}), (126, {'res': '$const126.62'}), (128, {'func': '$112load_attr.55', 'args': ['$120binary_add.59', '$124load_attr.61'], 'names': '$const126.62', 'res': '$128call_function_kw.63'}), (130, {'value': '$128call_function_kw.63'}), (132, {'res': '$132load_global.64'}), (134, {'item': '$132load_global.64', 'res': '$134load_method.65'}), (136, {'res': '$136load_global.66'}), (138, {'item': '$136load_global.66', 'res': '$138load_method.67'}), (140, {'res': '$sz140.68'}), (142, {'func': '$138load_method.67', 'args': ['$sz140.68'], 'res': '$142call_method.69'}), (144, {'func': '$134load_method.65', 'args': ['$142call_method.69'], 'res': '$144call_method.70'}), (146, {'res': '$full_block_starts_ind146.71'}), (148, {'res': '$const148.72'}), (150, {'res': '$const150.73'}), (152, {'start': '$const148.72', 'stop': '$const150.73', 'step': None, 'res': '$152build_slice.75', 'slicevar': '$152build_slice.74'}), (154, {'target': '$full_block_starts_ind146.71', 'index': '$152build_slice.75', 'value': '$144call_method.70'}), (156, {'res': '$156load_global.76'}), (158, {'item': '$156load_global.76', 'res': '$158load_method.77'}), (160, {'res': '$160load_global.78'}), (162, {'item': '$160load_global.78', 'res': '$162load_method.79'}), (164, {'res': '$164load_global.80'}), (166, {'item': '$164load_global.80', 'res': '$166load_method.81'}), (168, {'res': '$sz168.82'}), (170, {'func': '$166load_method.81', 'args': ['$sz168.82'], 'res': '$170call_method.83'}), (172, {'func': '$162load_method.79', 'args': ['$170call_method.83'], 'res': '$172call_method.84'}), (174, {'func': '$158load_method.77', 'args': ['$172call_method.84'], 'res': '$174call_method.85'}), (176, {'value': '$174call_method.85'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$180load_global.0'}), (182, {'res': '$sz182.1'}), (184, {'item': '$sz182.1', 'res': '$184load_attr.2'}), (186, {'func': '$180load_global.0', 'args': ['$184load_attr.2'], 'res': '$186call_function.3'}), (188, {'value': '$186call_function.3', 'res': '$188get_iter.4'})), outgoing_phis={'$phi190.0': '$188get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ('$188get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=190 nstack_initial=1):
AdaptBlockInfo(insts=((190, {'iterator': '$phi190.0', 'pair': '$190for_iter.1', 'indval': '$190for_iter.2', 'pred': '$190for_iter.3'}),), outgoing_phis={'$phi192.1': '$190for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={378: (), 192: ('$phi190.0', '$190for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=192 nstack_initial=2):
AdaptBlockInfo(insts=((192, {'value': '$phi192.1'}), (194, {'res': '$sz194.2'}), (196, {'res': '$iter1196.3'}), (198, {'index': '$iter1196.3', 'target': '$sz194.2', 'res': '$198binary_subscr.4'}), (200, {'value': '$198binary_subscr.4'}), (202, {'res': '$202load_global.5'}), (204, {'item': '$202load_global.5', 'res': '$204load_method.6'}), (206, {'res': '$n206.7'}), (208, {'res': '$n208.8'}), (210, {'items': ['$n206.7', '$n208.8'], 'res': '$210build_tuple.9'}), (212, {'func': '$204load_method.6', 'args': ['$210build_tuple.9'], 'res': '$212call_method.10'}), (214, {'value': '$212call_method.10'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={216: ('$phi192.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=216 nstack_initial=1):
AdaptBlockInfo(insts=((218, {'res': '$218load_global.1'}), (220, {'res': '$n220.2'}), (222, {'func': '$218load_global.1', 'args': ['$n220.2'], 'res': '$222call_function.3'}), (224, {'value': '$222call_function.3', 'res': '$224get_iter.4'})), outgoing_phis={'$phi226.1': '$224get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={226: ('$phi216.0', '$224get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=226 nstack_initial=2):
AdaptBlockInfo(insts=((226, {'iterator': '$phi226.1', 'pair': '$226for_iter.2', 'indval': '$226for_iter.3', 'pred': '$226for_iter.4'}),), outgoing_phis={'$phi228.2': '$226for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={324: ('$phi226.0',), 228: ('$phi226.0', '$phi226.1', '$226for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=228 nstack_initial=3):
AdaptBlockInfo(insts=((228, {'value': '$phi228.2'}), (230, {'res': '$block_row_starts_ind230.3'}), (232, {'res': '$iter1232.4'}), (234, {'index': '$iter1232.4', 'target': '$block_row_starts_ind230.3', 'res': '$234binary_subscr.5'}), (236, {'res': '$iter2236.6'}), (238, {'lhs': '$234binary_subscr.5', 'rhs': '$iter2236.6', 'res': '$238binary_add.7'}), (240, {'value': '$238binary_add.7'}), (242, {'res': '$row_cols_start_ind242.8'}), (244, {'res': '$global_row244.9'}), (246, {'index': '$global_row244.9', 'target': '$row_cols_start_ind242.8', 'res': '$246binary_subscr.10'}), (248, {'value': '$246binary_subscr.10'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={250: ('$phi228.0', '$phi228.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=250 nstack_initial=2):
AdaptBlockInfo(insts=((252, {'res': '$252load_global.2'}), (254, {'res': '$num_cols_per_row254.3'}), (256, {'res': '$iter2256.4'}), (258, {'res': '$block_row_starts_ind258.5'}), (260, {'res': '$iter1260.6'}), (262, {'index': '$iter1260.6', 'target': '$block_row_starts_ind258.5', 'res': '$262binary_subscr.7'}), (264, {'lhs': '$iter2256.4', 'rhs': '$262binary_subscr.7', 'res': '$264binary_add.8'}), (266, {'index': '$264binary_add.8', 'target': '$num_cols_per_row254.3', 'res': '$266binary_subscr.9'}), (268, {'func': '$252load_global.2', 'args': ['$266binary_subscr.9'], 'res': '$268call_function.10'}), (270, {'value': '$268call_function.10', 'res': '$270get_iter.11'})), outgoing_phis={'$phi272.2': '$270get_iter.11'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={272: ('$phi250.0', '$phi250.1', '$270get_iter.11')})
DEBUG:numba.byteflow:block_infos State(pc_initial=272 nstack_initial=3):
AdaptBlockInfo(insts=((272, {'iterator': '$phi272.2', 'pair': '$272for_iter.3', 'indval': '$272for_iter.4', 'pred': '$272for_iter.5'}),), outgoing_phis={'$phi274.3': '$272for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={320: ('$phi272.0', '$phi272.1'), 274: ('$phi272.0', '$phi272.1', '$phi272.2', '$272for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=274 nstack_initial=4):
AdaptBlockInfo(insts=((274, {'value': '$phi274.3'}), (276, {'res': '$ind276.4'}), (278, {'res': '$data_counter278.5'}), (280, {'index': '$data_counter278.5', 'target': '$ind276.4', 'res': '$280binary_subscr.6'}), (282, {'res': '$block_row_starts_ind282.7'}), (284, {'res': '$iter1284.8'}), (286, {'index': '$iter1284.8', 'target': '$block_row_starts_ind282.7', 'res': '$286binary_subscr.9'}), (288, {'lhs': '$280binary_subscr.6', 'rhs': '$286binary_subscr.9', 'res': '$288binary_subtract.10'}), (290, {'value': '$288binary_subtract.10'}), (292, {'res': '$data292.11'}), (294, {'res': '$data_counter294.12'}), (296, {'index': '$data_counter294.12', 'target': '$data292.11', 'res': '$296binary_subscr.13'}), (298, {'res': '$loc_mat298.14'}), (300, {'res': '$iter2300.15'}), (302, {'res': '$loc_col302.16'}), (304, {'items': ['$iter2300.15', '$loc_col302.16'], 'res': '$304build_tuple.17'}), (306, {'target': '$loc_mat298.14', 'index': '$304build_tuple.17', 'value': '$296binary_subscr.13'}), (308, {'res': '$data_counter308.18'}), (310, {'res': '$const310.19'}), (312, {'lhs': '$data_counter308.18', 'rhs': '$const310.19', 'res': '$312inplace_add.20'}), (314, {'value': '$312inplace_add.20'}), (316, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={272: ('$phi274.0', '$phi274.1', '$phi274.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=320 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={322: ('$phi320.0', '$phi320.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=322 nstack_initial=2):
AdaptBlockInfo(insts=((322, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={226: ('$phi322.0', '$phi322.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=324 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={326: ('$phi324.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=326 nstack_initial=1):
AdaptBlockInfo(insts=((326, {'res': '$326load_global.1'}), (328, {'item': '$326load_global.1', 'res': '$328load_method.2'}), (330, {'res': '$330load_global.3'}), (332, {'item': '$330load_global.3', 'res': '$332load_attr.4'}), (334, {'item': '$332load_attr.4', 'res': '$334load_method.5'}), (336, {'res': '$loc_mat336.6'}), (338, {'func': '$334load_method.5', 'args': ['$loc_mat336.6'], 'res': '$338call_method.7'}), (340, {'func': '$328load_method.2', 'args': ['$338call_method.7'], 'res': '$340call_method.8'}), (342, {'value': '$340call_method.8'}), (344, {'res': '$344load_global.9'}), (346, {'item': '$344load_global.9', 'res': '$346load_method.10'}), (348, {'res': '$full_block_starts_ind348.11'}), (350, {'res': '$iter1350.12'}), (352, {'index': '$iter1350.12', 'target': '$full_block_starts_ind348.11', 'res': '$352binary_subscr.13'}), (354, {'res': '$full_block_starts_ind354.14'}), (356, {'res': '$iter1356.15'}), (358, {'res': '$const358.16'}), (360, {'lhs': '$iter1356.15', 'rhs': '$const358.16', 'res': '$360binary_add.17'}), (362, {'index': '$360binary_add.17', 'target': '$full_block_starts_ind354.14', 'res': '$362binary_subscr.18'}), (364, {'func': '$346load_method.10', 'args': ['$352binary_subscr.13', '$362binary_subscr.18'], 'res': '$364call_method.19'}), (366, {'value': '$364call_method.19'}), (368, {'res': '$inv_mat368.20'}), (370, {'res': '$inv_vals370.21'}), (372, {'res': '$loc_ind372.22'}), (374, {'target': '$inv_vals370.21', 'index': '$loc_ind372.22', 'value': '$inv_mat368.20'}), (376, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={190: ('$phi326.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={380: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=380 nstack_initial=0):
AdaptBlockInfo(insts=((380, {'res': '$inv_vals380.0'}), (382, {'retval': '$inv_vals380.0', 'castval': '$382return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    indptr = arg(0, name=indptr)             ['indptr']
    ind = arg(1, name=ind)                   ['ind']
    data = arg(2, name=data)                 ['data']
    sz = arg(3, name=sz)                     ['sz']
    $2load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=zeros) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=sz, attr=size) ['$8load_attr.3', 'sz']
    $10load_global.4 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$10load_global.4']
    $12load_attr.5 = getattr(value=$10load_global.4, attr=int32) ['$10load_global.4', '$12load_attr.5']
    $16call_function_kw.7 = call $4load_attr.1($8load_attr.3, func=$4load_attr.1, args=[Var($8load_attr.3, fvutils.py:374)], kws=[('dtype', Var($12load_attr.5, fvutils.py:374))], vararg=None) ['$12load_attr.5', '$16call_function_kw.7', '$4load_attr.1', '$8load_attr.3']
    block_row_starts_ind = $16call_function_kw.7 ['$16call_function_kw.7', 'block_row_starts_ind']
    $20load_global.8 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$20load_global.8']
    $22load_method.9 = getattr(value=$20load_global.8, attr=cumsum) ['$20load_global.8', '$22load_method.9']
    $const26.11 = const(NoneType, None)      ['$const26.11']
    $const28.12 = const(int, -1)             ['$const28.12']
    $30build_slice.13 = global(slice: <class 'slice'>) ['$30build_slice.13']
    $30build_slice.14 = call $30build_slice.13($const26.11, $const28.12, func=$30build_slice.13, args=(Var($const26.11, fvutils.py:375), Var($const28.12, fvutils.py:375)), kws=(), vararg=None) ['$30build_slice.13', '$30build_slice.14', '$const26.11', '$const28.12']
    $32binary_subscr.15 = getitem(value=sz, index=$30build_slice.14) ['$30build_slice.14', '$32binary_subscr.15', 'sz']
    $34call_method.16 = call $22load_method.9($32binary_subscr.15, func=$22load_method.9, args=[Var($32binary_subscr.15, fvutils.py:375)], kws=(), vararg=None) ['$22load_method.9', '$32binary_subscr.15', '$34call_method.16']
    $const38.18 = const(int, 1)              ['$const38.18']
    $const40.19 = const(NoneType, None)      ['$const40.19']
    $42build_slice.20 = global(slice: <class 'slice'>) ['$42build_slice.20']
    $42build_slice.21 = call $42build_slice.20($const38.18, $const40.19, func=$42build_slice.20, args=(Var($const38.18, fvutils.py:375), Var($const40.19, fvutils.py:375)), kws=(), vararg=None) ['$42build_slice.20', '$42build_slice.21', '$const38.18', '$const40.19']
    block_row_starts_ind[$42build_slice.21] = $34call_method.16 ['$34call_method.16', '$42build_slice.21', 'block_row_starts_ind']
    $const48.23 = const(int, 1)              ['$const48.23']
    $const50.24 = const(NoneType, None)      ['$const50.24']
    $52build_slice.25 = global(slice: <class 'slice'>) ['$52build_slice.25']
    $52build_slice.26 = call $52build_slice.25($const48.23, $const50.24, func=$52build_slice.25, args=(Var($const48.23, fvutils.py:379), Var($const50.24, fvutils.py:379)), kws=(), vararg=None) ['$52build_slice.25', '$52build_slice.26', '$const48.23', '$const50.24']
    $54binary_subscr.27 = getitem(value=indptr, index=$52build_slice.26) ['$52build_slice.26', '$54binary_subscr.27', 'indptr']
    $const58.29 = const(int, 0)              ['$const58.29']
    $const60.30 = const(int, -1)             ['$const60.30']
    $62build_slice.31 = global(slice: <class 'slice'>) ['$62build_slice.31']
    $62build_slice.32 = call $62build_slice.31($const58.29, $const60.30, func=$62build_slice.31, args=(Var($const58.29, fvutils.py:379), Var($const60.30, fvutils.py:379)), kws=(), vararg=None) ['$62build_slice.31', '$62build_slice.32', '$const58.29', '$const60.30']
    $64binary_subscr.33 = getitem(value=indptr, index=$62build_slice.32) ['$62build_slice.32', '$64binary_subscr.33', 'indptr']
    $66binary_subtract.34 = $54binary_subscr.27 - $64binary_subscr.33 ['$54binary_subscr.27', '$64binary_subscr.33', '$66binary_subtract.34']
    num_cols_per_row = $66binary_subtract.34 ['$66binary_subtract.34', 'num_cols_per_row']
    $70load_global.35 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$70load_global.35']
    $72load_attr.36 = getattr(value=$70load_global.35, attr=zeros) ['$70load_global.35', '$72load_attr.36']
    $76load_attr.38 = getattr(value=num_cols_per_row, attr=size) ['$76load_attr.38', 'num_cols_per_row']
    $const78.39 = const(int, 1)              ['$const78.39']
    $80binary_add.40 = $76load_attr.38 + $const78.39 ['$76load_attr.38', '$80binary_add.40', '$const78.39']
    $82load_global.41 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$82load_global.41']
    $84load_attr.42 = getattr(value=$82load_global.41, attr=int32) ['$82load_global.41', '$84load_attr.42']
    $88call_function_kw.44 = call $72load_attr.36($80binary_add.40, func=$72load_attr.36, args=[Var($80binary_add.40, fvutils.py:383)], kws=[('dtype', Var($84load_attr.42, fvutils.py:383))], vararg=None) ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42', '$88call_function_kw.44']
    row_cols_start_ind = $88call_function_kw.44 ['$88call_function_kw.44', 'row_cols_start_ind']
    $92load_global.45 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$92load_global.45']
    $94load_method.46 = getattr(value=$92load_global.45, attr=cumsum) ['$92load_global.45', '$94load_method.46']
    $98call_method.48 = call $94load_method.46(num_cols_per_row, func=$94load_method.46, args=[Var(num_cols_per_row, fvutils.py:379)], kws=(), vararg=None) ['$94load_method.46', '$98call_method.48', 'num_cols_per_row']
    $const102.50 = const(int, 1)             ['$const102.50']
    $const104.51 = const(NoneType, None)     ['$const104.51']
    $106build_slice.52 = global(slice: <class 'slice'>) ['$106build_slice.52']
    $106build_slice.53 = call $106build_slice.52($const102.50, $const104.51, func=$106build_slice.52, args=(Var($const102.50, fvutils.py:384), Var($const104.51, fvutils.py:384)), kws=(), vararg=None) ['$106build_slice.52', '$106build_slice.53', '$const102.50', '$const104.51']
    row_cols_start_ind[$106build_slice.53] = $98call_method.48 ['$106build_slice.53', '$98call_method.48', 'row_cols_start_ind']
    $110load_global.54 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$110load_global.54']
    $112load_attr.55 = getattr(value=$110load_global.54, attr=zeros) ['$110load_global.54', '$112load_attr.55']
    $116load_attr.57 = getattr(value=sz, attr=size) ['$116load_attr.57', 'sz']
    $const118.58 = const(int, 1)             ['$const118.58']
    $120binary_add.59 = $116load_attr.57 + $const118.58 ['$116load_attr.57', '$120binary_add.59', '$const118.58']
    $122load_global.60 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$122load_global.60']
    $124load_attr.61 = getattr(value=$122load_global.60, attr=int32) ['$122load_global.60', '$124load_attr.61']
    $128call_function_kw.63 = call $112load_attr.55($120binary_add.59, func=$112load_attr.55, args=[Var($120binary_add.59, fvutils.py:390)], kws=[('dtype', Var($124load_attr.61, fvutils.py:390))], vararg=None) ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61', '$128call_function_kw.63']
    full_block_starts_ind = $128call_function_kw.63 ['$128call_function_kw.63', 'full_block_starts_ind']
    $132load_global.64 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$132load_global.64']
    $134load_method.65 = getattr(value=$132load_global.64, attr=cumsum) ['$132load_global.64', '$134load_method.65']
    $136load_global.66 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$136load_global.66']
    $138load_method.67 = getattr(value=$136load_global.66, attr=square) ['$136load_global.66', '$138load_method.67']
    $142call_method.69 = call $138load_method.67(sz, func=$138load_method.67, args=[Var(sz, fvutils.py:374)], kws=(), vararg=None) ['$138load_method.67', '$142call_method.69', 'sz']
    $144call_method.70 = call $134load_method.65($142call_method.69, func=$134load_method.65, args=[Var($142call_method.69, fvutils.py:391)], kws=(), vararg=None) ['$134load_method.65', '$142call_method.69', '$144call_method.70']
    $const148.72 = const(int, 1)             ['$const148.72']
    $const150.73 = const(NoneType, None)     ['$const150.73']
    $152build_slice.74 = global(slice: <class 'slice'>) ['$152build_slice.74']
    $152build_slice.75 = call $152build_slice.74($const148.72, $const150.73, func=$152build_slice.74, args=(Var($const148.72, fvutils.py:391), Var($const150.73, fvutils.py:391)), kws=(), vararg=None) ['$152build_slice.74', '$152build_slice.75', '$const148.72', '$const150.73']
    full_block_starts_ind[$152build_slice.75] = $144call_method.70 ['$144call_method.70', '$152build_slice.75', 'full_block_starts_ind']
    $156load_global.76 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$156load_global.76']
    $158load_method.77 = getattr(value=$156load_global.76, attr=zeros) ['$156load_global.76', '$158load_method.77']
    $160load_global.78 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$160load_global.78']
    $162load_method.79 = getattr(value=$160load_global.78, attr=sum) ['$160load_global.78', '$162load_method.79']
    $164load_global.80 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$164load_global.80']
    $166load_method.81 = getattr(value=$164load_global.80, attr=square) ['$164load_global.80', '$166load_method.81']
    $170call_method.83 = call $166load_method.81(sz, func=$166load_method.81, args=[Var(sz, fvutils.py:374)], kws=(), vararg=None) ['$166load_method.81', '$170call_method.83', 'sz']
    $172call_method.84 = call $162load_method.79($170call_method.83, func=$162load_method.79, args=[Var($170call_method.83, fvutils.py:393)], kws=(), vararg=None) ['$162load_method.79', '$170call_method.83', '$172call_method.84']
    $174call_method.85 = call $158load_method.77($172call_method.84, func=$158load_method.77, args=[Var($172call_method.84, fvutils.py:393)], kws=(), vararg=None) ['$158load_method.77', '$172call_method.84', '$174call_method.85']
    inv_vals = $174call_method.85            ['$174call_method.85', 'inv_vals']
    jump 178                                 []
label 178:
    $180load_global.0 = global(range: <class 'range'>) ['$180load_global.0']
    $184load_attr.2 = getattr(value=sz, attr=size) ['$184load_attr.2', 'sz']
    $186call_function.3 = call $180load_global.0($184load_attr.2, func=$180load_global.0, args=[Var($184load_attr.2, fvutils.py:396)], kws=(), vararg=None) ['$180load_global.0', '$184load_attr.2', '$186call_function.3']
    $188get_iter.4 = getiter(value=$186call_function.3) ['$186call_function.3', '$188get_iter.4']
    $phi190.0 = $188get_iter.4               ['$188get_iter.4', '$phi190.0']
    jump 190                                 []
label 190:
    $190for_iter.1 = iternext(value=$phi190.0) ['$190for_iter.1', '$phi190.0']
    $190for_iter.2 = pair_first(value=$190for_iter.1) ['$190for_iter.1', '$190for_iter.2']
    $190for_iter.3 = pair_second(value=$190for_iter.1) ['$190for_iter.1', '$190for_iter.3']
    $phi192.1 = $190for_iter.2               ['$190for_iter.2', '$phi192.1']
    branch $190for_iter.3, 192, 378          ['$190for_iter.3']
label 192:
    iter1 = $phi192.1                        ['$phi192.1', 'iter1']
    $198binary_subscr.4 = getitem(value=sz, index=iter1) ['$198binary_subscr.4', 'iter1', 'sz']
    n = $198binary_subscr.4                  ['$198binary_subscr.4', 'n']
    $202load_global.5 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$202load_global.5']
    $204load_method.6 = getattr(value=$202load_global.5, attr=zeros) ['$202load_global.5', '$204load_method.6']
    $210build_tuple.9 = build_tuple(items=[Var(n, fvutils.py:397), Var(n, fvutils.py:397)]) ['$210build_tuple.9', 'n', 'n']
    $212call_method.10 = call $204load_method.6($210build_tuple.9, func=$204load_method.6, args=[Var($210build_tuple.9, fvutils.py:398)], kws=(), vararg=None) ['$204load_method.6', '$210build_tuple.9', '$212call_method.10']
    loc_mat = $212call_method.10             ['$212call_method.10', 'loc_mat']
    jump 216                                 []
label 216:
    $218load_global.1 = global(range: <class 'range'>) ['$218load_global.1']
    $222call_function.3 = call $218load_global.1(n, func=$218load_global.1, args=[Var(n, fvutils.py:397)], kws=(), vararg=None) ['$218load_global.1', '$222call_function.3', 'n']
    $224get_iter.4 = getiter(value=$222call_function.3) ['$222call_function.3', '$224get_iter.4']
    $phi226.1 = $224get_iter.4               ['$224get_iter.4', '$phi226.1']
    jump 226                                 []
label 226:
    $226for_iter.2 = iternext(value=$phi226.1) ['$226for_iter.2', '$phi226.1']
    $226for_iter.3 = pair_first(value=$226for_iter.2) ['$226for_iter.2', '$226for_iter.3']
    $226for_iter.4 = pair_second(value=$226for_iter.2) ['$226for_iter.2', '$226for_iter.4']
    $phi228.2 = $226for_iter.3               ['$226for_iter.3', '$phi228.2']
    branch $226for_iter.4, 228, 324          ['$226for_iter.4']
label 228:
    iter2 = $phi228.2                        ['$phi228.2', 'iter2']
    $234binary_subscr.5 = getitem(value=block_row_starts_ind, index=iter1) ['$234binary_subscr.5', 'block_row_starts_ind', 'iter1']
    $238binary_add.7 = $234binary_subscr.5 + iter2 ['$234binary_subscr.5', '$238binary_add.7', 'iter2']
    global_row = $238binary_add.7            ['$238binary_add.7', 'global_row']
    $246binary_subscr.10 = getitem(value=row_cols_start_ind, index=global_row) ['$246binary_subscr.10', 'global_row', 'row_cols_start_ind']
    data_counter = $246binary_subscr.10      ['$246binary_subscr.10', 'data_counter']
    jump 250                                 []
label 250:
    $252load_global.2 = global(range: <class 'range'>) ['$252load_global.2']
    $262binary_subscr.7 = getitem(value=block_row_starts_ind, index=iter1) ['$262binary_subscr.7', 'block_row_starts_ind', 'iter1']
    $264binary_add.8 = iter2 + $262binary_subscr.7 ['$262binary_subscr.7', '$264binary_add.8', 'iter2']
    $266binary_subscr.9 = getitem(value=num_cols_per_row, index=$264binary_add.8) ['$264binary_add.8', '$266binary_subscr.9', 'num_cols_per_row']
    $268call_function.10 = call $252load_global.2($266binary_subscr.9, func=$252load_global.2, args=[Var($266binary_subscr.9, fvutils.py:407)], kws=(), vararg=None) ['$252load_global.2', '$266binary_subscr.9', '$268call_function.10']
    $270get_iter.11 = getiter(value=$268call_function.10) ['$268call_function.10', '$270get_iter.11']
    $phi272.2 = $270get_iter.11              ['$270get_iter.11', '$phi272.2']
    jump 272                                 []
label 272:
    $272for_iter.3 = iternext(value=$phi272.2) ['$272for_iter.3', '$phi272.2']
    $272for_iter.4 = pair_first(value=$272for_iter.3) ['$272for_iter.3', '$272for_iter.4']
    $272for_iter.5 = pair_second(value=$272for_iter.3) ['$272for_iter.3', '$272for_iter.5']
    $phi274.3 = $272for_iter.4               ['$272for_iter.4', '$phi274.3']
    branch $272for_iter.5, 274, 320          ['$272for_iter.5']
label 274:
    _ = $phi274.3                            ['$phi274.3', '_']
    $280binary_subscr.6 = getitem(value=ind, index=data_counter) ['$280binary_subscr.6', 'data_counter', 'ind']
    $286binary_subscr.9 = getitem(value=block_row_starts_ind, index=iter1) ['$286binary_subscr.9', 'block_row_starts_ind', 'iter1']
    $288binary_subtract.10 = $280binary_subscr.6 - $286binary_subscr.9 ['$280binary_subscr.6', '$286binary_subscr.9', '$288binary_subtract.10']
    loc_col = $288binary_subtract.10         ['$288binary_subtract.10', 'loc_col']
    $296binary_subscr.13 = getitem(value=data, index=data_counter) ['$296binary_subscr.13', 'data', 'data_counter']
    $304build_tuple.17 = build_tuple(items=[Var(iter2, fvutils.py:400), Var(loc_col, fvutils.py:409)]) ['$304build_tuple.17', 'iter2', 'loc_col']
    loc_mat[$304build_tuple.17] = $296binary_subscr.13 ['$296binary_subscr.13', '$304build_tuple.17', 'loc_mat']
    $const310.19 = const(int, 1)             ['$const310.19']
    $312inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=data_counter, rhs=$const310.19, static_lhs=Undefined, static_rhs=Undefined) ['$312inplace_add.20', '$const310.19', 'data_counter']
    data_counter = $312inplace_add.20        ['$312inplace_add.20', 'data_counter']
    jump 272                                 []
label 320:
    jump 322                                 []
label 322:
    jump 226                                 []
label 324:
    jump 326                                 []
label 326:
    $326load_global.1 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$326load_global.1']
    $328load_method.2 = getattr(value=$326load_global.1, attr=ravel) ['$326load_global.1', '$328load_method.2']
    $330load_global.3 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$330load_global.3']
    $332load_attr.4 = getattr(value=$330load_global.3, attr=linalg) ['$330load_global.3', '$332load_attr.4']
    $334load_method.5 = getattr(value=$332load_attr.4, attr=inv) ['$332load_attr.4', '$334load_method.5']
    $338call_method.7 = call $334load_method.5(loc_mat, func=$334load_method.5, args=[Var(loc_mat, fvutils.py:398)], kws=(), vararg=None) ['$334load_method.5', '$338call_method.7', 'loc_mat']
    $340call_method.8 = call $328load_method.2($338call_method.7, func=$328load_method.2, args=[Var($338call_method.7, fvutils.py:416)], kws=(), vararg=None) ['$328load_method.2', '$338call_method.7', '$340call_method.8']
    inv_mat = $340call_method.8              ['$340call_method.8', 'inv_mat']
    $344load_global.9 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$344load_global.9']
    $346load_method.10 = getattr(value=$344load_global.9, attr=arange) ['$344load_global.9', '$346load_method.10']
    $352binary_subscr.13 = getitem(value=full_block_starts_ind, index=iter1) ['$352binary_subscr.13', 'full_block_starts_ind', 'iter1']
    $const358.16 = const(int, 1)             ['$const358.16']
    $360binary_add.17 = iter1 + $const358.16 ['$360binary_add.17', '$const358.16', 'iter1']
    $362binary_subscr.18 = getitem(value=full_block_starts_ind, index=$360binary_add.17) ['$360binary_add.17', '$362binary_subscr.18', 'full_block_starts_ind']
    $364call_method.19 = call $346load_method.10($352binary_subscr.13, $362binary_subscr.18, func=$346load_method.10, args=[Var($352binary_subscr.13, fvutils.py:419), Var($362binary_subscr.18, fvutils.py:419)], kws=(), vararg=None) ['$346load_method.10', '$352binary_subscr.13', '$362binary_subscr.18', '$364call_method.19']
    loc_ind = $364call_method.19             ['$364call_method.19', 'loc_ind']
    inv_vals[loc_ind] = inv_mat              ['inv_mat', 'inv_vals', 'loc_ind']
    jump 190                                 []
label 378:
    jump 380                                 []
label 380:
    $382return_value.1 = cast(value=inv_vals) ['$382return_value.1', 'inv_vals']
    return $382return_value.1                ['$382return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=371)
           2	LOAD_GLOBAL(arg=0, lineno=371)
           4	LOAD_METHOD(arg=1, lineno=371)
           6	LOAD_FAST(arg=0, lineno=371)
           8	LOAD_ATTR(arg=2, lineno=371)
          10	LOAD_DEREF(arg=0, lineno=371)
          12	CALL_METHOD(arg=2, lineno=371)
          14	STORE_FAST(arg=1, lineno=371)
          16	LOAD_DEREF(arg=1, lineno=372)
          18	STORE_FAST(arg=2, lineno=372)
          20	SETUP_LOOP(arg=38, lineno=373)
          22	LOAD_GLOBAL(arg=3, lineno=373)
          24	LOAD_FAST(arg=0, lineno=373)
          26	LOAD_ATTR(arg=4, lineno=373)
          28	CALL_FUNCTION(arg=1, lineno=373)
          30	GET_ITER(arg=None, lineno=373)
>         32	FOR_ITER(arg=24, lineno=373)
          34	UNPACK_SEQUENCE(arg=2, lineno=373)
          36	STORE_FAST(arg=3, lineno=373)
          38	STORE_FAST(arg=4, lineno=373)
          40	LOAD_FAST(arg=2, lineno=374)
          42	LOAD_FAST(arg=4, lineno=374)
          44	INPLACE_ADD(arg=None, lineno=374)
          46	STORE_FAST(arg=2, lineno=374)
          48	LOAD_FAST(arg=2, lineno=375)
          50	LOAD_FAST(arg=1, lineno=375)
          52	LOAD_FAST(arg=3, lineno=375)
          54	STORE_SUBSCR(arg=None, lineno=375)
          56	JUMP_ABSOLUTE(arg=32, lineno=375)
>         58	POP_BLOCK(arg=None, lineno=375)
>         60	LOAD_FAST(arg=1, lineno=376)
          62	RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$arr6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3', '$10load_deref.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=STORE_FAST(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$12call_method.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=LOAD_DEREF(arg=1, lineno=372)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=372)
DEBUG:numba.byteflow:stack ['$16load_deref.6']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=20, inst=SETUP_LOOP(arg=38, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=3, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$arr24.1']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$26load_attr.2']
DEBUG:numba.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=373)
DEBUG:numba.byteflow:stack ['$28call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi32.0']
DEBUG:numba.byteflow:dispatch pc=32, inst=FOR_ITER(arg=24, lineno=373)
DEBUG:numba.byteflow:stack ['$phi32.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=58, inst=POP_BLOCK(arg=None, lineno=375)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=34, inst=UNPACK_SEQUENCE(arg=2, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3', '$34unpack_sequence.2']
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5']
DEBUG:numba.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5', '$v42.6']
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$44inplace_add.7']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9']
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9', '$idx52.10']
DEBUG:numba.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=32, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=376)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:stack ['$out60.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=60 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi32.0': State(pc_initial=20 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.4', State(pc_initial=20 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=20 nstack_initial=0): {'$phi32.0': '$30get_iter.4'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$arr6.2'}), (8, {'item': '$arr6.2', 'res': '$8load_attr.3'}), (10, {'res': '$10load_deref.4'}), (12, {'func': '$4load_method.1', 'args': ['$8load_attr.3', '$10load_deref.4'], 'res': '$12call_method.5'}), (14, {'value': '$12call_method.5'}), (16, {'res': '$16load_deref.6'}), (18, {'value': '$16load_deref.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$arr24.1'}), (26, {'item': '$arr24.1', 'res': '$26load_attr.2'}), (28, {'func': '$22load_global.0', 'args': ['$26load_attr.2'], 'res': '$28call_function.3'}), (30, {'value': '$28call_function.3', 'res': '$30get_iter.4'})), outgoing_phis={'$phi32.0': '$30get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={58: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'iterable': '$phi34.1', 'stores': ['$34unpack_sequence.2', '$34unpack_sequence.3'], 'tupleobj': '$34unpack_sequence.4'}), (36, {'value': '$34unpack_sequence.2'}), (38, {'value': '$34unpack_sequence.3'}), (40, {'res': '$c40.5'}), (42, {'res': '$v42.6'}), (44, {'lhs': '$c40.5', 'rhs': '$v42.6', 'res': '$44inplace_add.7'}), (46, {'value': '$44inplace_add.7'}), (48, {'res': '$c48.8'}), (50, {'res': '$out50.9'}), (52, {'res': '$idx52.10'}), (54, {'target': '$out50.9', 'index': '$idx52.10', 'value': '$c48.8'}), (56, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={60: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$out60.0'}), (62, {'retval': '$out60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=arr, attr=size) ['$8load_attr.3', 'arr']
    $10load_deref.4 = freevar(dtype: int64)  ['$10load_deref.4']
    $12call_method.5 = call $4load_method.1($8load_attr.3, $10load_deref.4, func=$4load_method.1, args=[Var($8load_attr.3, arraymath.py:371), Var($10load_deref.4, arraymath.py:371)], kws=(), vararg=None) ['$10load_deref.4', '$12call_method.5', '$4load_method.1', '$8load_attr.3']
    out = $12call_method.5                   ['$12call_method.5', 'out']
    $16load_deref.6 = freevar(zero: 0)       ['$16load_deref.6']
    c = $16load_deref.6                      ['$16load_deref.6', 'c']
    jump 20                                  []
label 20:
    $22load_global.0 = global(enumerate: <class 'enumerate'>) ['$22load_global.0']
    $26load_attr.2 = getattr(value=arr, attr=flat) ['$26load_attr.2', 'arr']
    $28call_function.3 = call $22load_global.0($26load_attr.2, func=$22load_global.0, args=[Var($26load_attr.2, arraymath.py:373)], kws=(), vararg=None) ['$22load_global.0', '$26load_attr.2', '$28call_function.3']
    $30get_iter.4 = getiter(value=$28call_function.3) ['$28call_function.3', '$30get_iter.4']
    $phi32.0 = $30get_iter.4                 ['$30get_iter.4', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 58             ['$32for_iter.3']
label 34:
    $34unpack_sequence.4 = exhaust_iter(value=$phi34.1, count=2) ['$34unpack_sequence.4', '$phi34.1']
    $34unpack_sequence.2 = static_getitem(value=$34unpack_sequence.4, index=0, index_var=None) ['$34unpack_sequence.2', '$34unpack_sequence.4']
    $34unpack_sequence.3 = static_getitem(value=$34unpack_sequence.4, index=1, index_var=None) ['$34unpack_sequence.3', '$34unpack_sequence.4']
    idx = $34unpack_sequence.2               ['$34unpack_sequence.2', 'idx']
    v = $34unpack_sequence.3                 ['$34unpack_sequence.3', 'v']
    $44inplace_add.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=v, static_lhs=Undefined, static_rhs=Undefined) ['$44inplace_add.7', 'c', 'v']
    c = $44inplace_add.7                     ['$44inplace_add.7', 'c']
    out[idx] = c                             ['c', 'idx', 'out']
    jump 32                                  []
label 58:
    jump 60                                  []
label 60:
    $62return_value.1 = cast(value=out)      ['$62return_value.1', 'out']
    return $62return_value.1                 ['$62return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=379)
           2	LOAD_FAST(arg=0, lineno=379)
           4	LOAD_FAST(arg=1, lineno=379)
           6	BINARY_SUBTRACT(arg=None, lineno=379)
           8	RETURN_VALUE(arg=None, lineno=379)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=379)
DEBUG:numba.byteflow:stack ['$_54binary_subscr_272.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=BINARY_SUBTRACT(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$_54binary_subscr_272.0', '$_64binary_subscr_334.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$6binary_subtract.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$_54binary_subscr_272.0'}), (4, {'res': '$_64binary_subscr_334.1'}), (6, {'lhs': '$_54binary_subscr_272.0', 'rhs': '$_64binary_subscr_334.1', 'res': '$6binary_subtract.2'}), (8, {'retval': '$6binary_subtract.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    _54binary_subscr_27 = arg(0, name=_54binary_subscr_27) ['_54binary_subscr_27']
    _64binary_subscr_33 = arg(1, name=_64binary_subscr_33) ['_64binary_subscr_33']
    $6binary_subtract.2 = _54binary_subscr_27 - _64binary_subscr_33 ['$6binary_subtract.2', '_54binary_subscr_27', '_64binary_subscr_33']
    $8return_value.3 = cast(value=$6binary_subtract.2) ['$6binary_subtract.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=371)
           2	LOAD_GLOBAL(arg=0, lineno=371)
           4	LOAD_METHOD(arg=1, lineno=371)
           6	LOAD_FAST(arg=0, lineno=371)
           8	LOAD_ATTR(arg=2, lineno=371)
          10	LOAD_DEREF(arg=0, lineno=371)
          12	CALL_METHOD(arg=2, lineno=371)
          14	STORE_FAST(arg=1, lineno=371)
          16	LOAD_DEREF(arg=1, lineno=372)
          18	STORE_FAST(arg=2, lineno=372)
          20	SETUP_LOOP(arg=38, lineno=373)
          22	LOAD_GLOBAL(arg=3, lineno=373)
          24	LOAD_FAST(arg=0, lineno=373)
          26	LOAD_ATTR(arg=4, lineno=373)
          28	CALL_FUNCTION(arg=1, lineno=373)
          30	GET_ITER(arg=None, lineno=373)
>         32	FOR_ITER(arg=24, lineno=373)
          34	UNPACK_SEQUENCE(arg=2, lineno=373)
          36	STORE_FAST(arg=3, lineno=373)
          38	STORE_FAST(arg=4, lineno=373)
          40	LOAD_FAST(arg=2, lineno=374)
          42	LOAD_FAST(arg=4, lineno=374)
          44	INPLACE_ADD(arg=None, lineno=374)
          46	STORE_FAST(arg=2, lineno=374)
          48	LOAD_FAST(arg=2, lineno=375)
          50	LOAD_FAST(arg=1, lineno=375)
          52	LOAD_FAST(arg=3, lineno=375)
          54	STORE_SUBSCR(arg=None, lineno=375)
          56	JUMP_ABSOLUTE(arg=32, lineno=375)
>         58	POP_BLOCK(arg=None, lineno=375)
>         60	LOAD_FAST(arg=1, lineno=376)
          62	RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$arr6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3', '$10load_deref.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=STORE_FAST(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$12call_method.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=LOAD_DEREF(arg=1, lineno=372)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=372)
DEBUG:numba.byteflow:stack ['$16load_deref.6']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=20, inst=SETUP_LOOP(arg=38, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=3, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$arr24.1']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$26load_attr.2']
DEBUG:numba.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=373)
DEBUG:numba.byteflow:stack ['$28call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi32.0']
DEBUG:numba.byteflow:dispatch pc=32, inst=FOR_ITER(arg=24, lineno=373)
DEBUG:numba.byteflow:stack ['$phi32.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=58, inst=POP_BLOCK(arg=None, lineno=375)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=34, inst=UNPACK_SEQUENCE(arg=2, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3', '$34unpack_sequence.2']
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5']
DEBUG:numba.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5', '$v42.6']
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$44inplace_add.7']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9']
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9', '$idx52.10']
DEBUG:numba.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=32, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=376)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:stack ['$out60.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi32.0': State(pc_initial=20 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.4', State(pc_initial=20 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'},
             State(pc_initial=20 nstack_initial=0): {'$phi32.0': '$30get_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$arr6.2'}), (8, {'item': '$arr6.2', 'res': '$8load_attr.3'}), (10, {'res': '$10load_deref.4'}), (12, {'func': '$4load_method.1', 'args': ['$8load_attr.3', '$10load_deref.4'], 'res': '$12call_method.5'}), (14, {'value': '$12call_method.5'}), (16, {'res': '$16load_deref.6'}), (18, {'value': '$16load_deref.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$arr24.1'}), (26, {'item': '$arr24.1', 'res': '$26load_attr.2'}), (28, {'func': '$22load_global.0', 'args': ['$26load_attr.2'], 'res': '$28call_function.3'}), (30, {'value': '$28call_function.3', 'res': '$30get_iter.4'})), outgoing_phis={'$phi32.0': '$30get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={58: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'iterable': '$phi34.1', 'stores': ['$34unpack_sequence.2', '$34unpack_sequence.3'], 'tupleobj': '$34unpack_sequence.4'}), (36, {'value': '$34unpack_sequence.2'}), (38, {'value': '$34unpack_sequence.3'}), (40, {'res': '$c40.5'}), (42, {'res': '$v42.6'}), (44, {'lhs': '$c40.5', 'rhs': '$v42.6', 'res': '$44inplace_add.7'}), (46, {'value': '$44inplace_add.7'}), (48, {'res': '$c48.8'}), (50, {'res': '$out50.9'}), (52, {'res': '$idx52.10'}), (54, {'target': '$out50.9', 'index': '$idx52.10', 'value': '$c48.8'}), (56, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={60: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$out60.0'}), (62, {'retval': '$out60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=arr, attr=size) ['$8load_attr.3', 'arr']
    $10load_deref.4 = freevar(dtype: int64)  ['$10load_deref.4']
    $12call_method.5 = call $4load_method.1($8load_attr.3, $10load_deref.4, func=$4load_method.1, args=[Var($8load_attr.3, arraymath.py:371), Var($10load_deref.4, arraymath.py:371)], kws=(), vararg=None) ['$10load_deref.4', '$12call_method.5', '$4load_method.1', '$8load_attr.3']
    out = $12call_method.5                   ['$12call_method.5', 'out']
    $16load_deref.6 = freevar(zero: 0)       ['$16load_deref.6']
    c = $16load_deref.6                      ['$16load_deref.6', 'c']
    jump 20                                  []
label 20:
    $22load_global.0 = global(enumerate: <class 'enumerate'>) ['$22load_global.0']
    $26load_attr.2 = getattr(value=arr, attr=flat) ['$26load_attr.2', 'arr']
    $28call_function.3 = call $22load_global.0($26load_attr.2, func=$22load_global.0, args=[Var($26load_attr.2, arraymath.py:373)], kws=(), vararg=None) ['$22load_global.0', '$26load_attr.2', '$28call_function.3']
    $30get_iter.4 = getiter(value=$28call_function.3) ['$28call_function.3', '$30get_iter.4']
    $phi32.0 = $30get_iter.4                 ['$30get_iter.4', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 58             ['$32for_iter.3']
label 34:
    $34unpack_sequence.4 = exhaust_iter(value=$phi34.1, count=2) ['$34unpack_sequence.4', '$phi34.1']
    $34unpack_sequence.2 = static_getitem(value=$34unpack_sequence.4, index=0, index_var=None) ['$34unpack_sequence.2', '$34unpack_sequence.4']
    $34unpack_sequence.3 = static_getitem(value=$34unpack_sequence.4, index=1, index_var=None) ['$34unpack_sequence.3', '$34unpack_sequence.4']
    idx = $34unpack_sequence.2               ['$34unpack_sequence.2', 'idx']
    v = $34unpack_sequence.3                 ['$34unpack_sequence.3', 'v']
    $44inplace_add.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=v, static_lhs=Undefined, static_rhs=Undefined) ['$44inplace_add.7', 'c', 'v']
    c = $44inplace_add.7                     ['$44inplace_add.7', 'c']
    out[idx] = c                             ['c', 'idx', 'out']
    jump 32                                  []
label 58:
    jump 60                                  []
label 60:
    $62return_value.1 = cast(value=out)      ['$62return_value.1', 'out']
    return $62return_value.1                 ['$62return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=374)
           6	CALL_FUNCTION(arg=1, lineno=374)
           8	RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$sz4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$6call_function.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sz4.1'}), (6, {'func': '$2load_global.0', 'args': ['$sz4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    sz = arg(0, name=sz)                     ['sz']
    $2load_global.0 = global(__ufunc_or_dufunc_0x5564f8bfba9: <ufunc 'square'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(sz, func=$2load_global.0, args=[Var(sz, fvutils.py:1)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'sz']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=371)
           2	LOAD_GLOBAL(arg=0, lineno=371)
           4	LOAD_METHOD(arg=1, lineno=371)
           6	LOAD_FAST(arg=0, lineno=371)
           8	LOAD_ATTR(arg=2, lineno=371)
          10	LOAD_DEREF(arg=0, lineno=371)
          12	CALL_METHOD(arg=2, lineno=371)
          14	STORE_FAST(arg=1, lineno=371)
          16	LOAD_DEREF(arg=1, lineno=372)
          18	STORE_FAST(arg=2, lineno=372)
          20	SETUP_LOOP(arg=38, lineno=373)
          22	LOAD_GLOBAL(arg=3, lineno=373)
          24	LOAD_FAST(arg=0, lineno=373)
          26	LOAD_ATTR(arg=4, lineno=373)
          28	CALL_FUNCTION(arg=1, lineno=373)
          30	GET_ITER(arg=None, lineno=373)
>         32	FOR_ITER(arg=24, lineno=373)
          34	UNPACK_SEQUENCE(arg=2, lineno=373)
          36	STORE_FAST(arg=3, lineno=373)
          38	STORE_FAST(arg=4, lineno=373)
          40	LOAD_FAST(arg=2, lineno=374)
          42	LOAD_FAST(arg=4, lineno=374)
          44	INPLACE_ADD(arg=None, lineno=374)
          46	STORE_FAST(arg=2, lineno=374)
          48	LOAD_FAST(arg=2, lineno=375)
          50	LOAD_FAST(arg=1, lineno=375)
          52	LOAD_FAST(arg=3, lineno=375)
          54	STORE_SUBSCR(arg=None, lineno=375)
          56	JUMP_ABSOLUTE(arg=32, lineno=375)
>         58	POP_BLOCK(arg=None, lineno=375)
>         60	LOAD_FAST(arg=1, lineno=376)
          62	RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=371)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$arr6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=0, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=2, lineno=371)
DEBUG:numba.byteflow:stack ['$4load_method.1', '$8load_attr.3', '$10load_deref.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=STORE_FAST(arg=1, lineno=371)
DEBUG:numba.byteflow:stack ['$12call_method.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=LOAD_DEREF(arg=1, lineno=372)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=372)
DEBUG:numba.byteflow:stack ['$16load_deref.6']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=20, inst=SETUP_LOOP(arg=38, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=3, lineno=373)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$arr24.1']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=373)
DEBUG:numba.byteflow:stack ['$22load_global.0', '$26load_attr.2']
DEBUG:numba.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=373)
DEBUG:numba.byteflow:stack ['$28call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi32.0']
DEBUG:numba.byteflow:dispatch pc=32, inst=FOR_ITER(arg=24, lineno=373)
DEBUG:numba.byteflow:stack ['$phi32.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=58, inst=POP_BLOCK(arg=None, lineno=375)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=60 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=34, inst=UNPACK_SEQUENCE(arg=2, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3', '$34unpack_sequence.2']
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=373)
DEBUG:numba.byteflow:stack ['$phi34.0', '$34unpack_sequence.3']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5']
DEBUG:numba.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c40.5', '$v42.6']
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$phi34.0', '$44inplace_add.7']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9']
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0', '$c48.8', '$out50.9', '$idx52.10']
DEBUG:numba.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=32, lineno=375)
DEBUG:numba.byteflow:stack ['$phi34.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=376)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=376)
DEBUG:numba.byteflow:stack ['$out60.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi32.0': State(pc_initial=20 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.4',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.4', State(pc_initial=20 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'},
             State(pc_initial=20 nstack_initial=0): {'$phi32.0': '$30get_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$arr6.2'}), (8, {'item': '$arr6.2', 'res': '$8load_attr.3'}), (10, {'res': '$10load_deref.4'}), (12, {'func': '$4load_method.1', 'args': ['$8load_attr.3', '$10load_deref.4'], 'res': '$12call_method.5'}), (14, {'value': '$12call_method.5'}), (16, {'res': '$16load_deref.6'}), (18, {'value': '$16load_deref.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$arr24.1'}), (26, {'item': '$arr24.1', 'res': '$26load_attr.2'}), (28, {'func': '$22load_global.0', 'args': ['$26load_attr.2'], 'res': '$28call_function.3'}), (30, {'value': '$28call_function.3', 'res': '$30get_iter.4'})), outgoing_phis={'$phi32.0': '$30get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={58: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'iterable': '$phi34.1', 'stores': ['$34unpack_sequence.2', '$34unpack_sequence.3'], 'tupleobj': '$34unpack_sequence.4'}), (36, {'value': '$34unpack_sequence.2'}), (38, {'value': '$34unpack_sequence.3'}), (40, {'res': '$c40.5'}), (42, {'res': '$v42.6'}), (44, {'lhs': '$c40.5', 'rhs': '$v42.6', 'res': '$44inplace_add.7'}), (46, {'value': '$44inplace_add.7'}), (48, {'res': '$c48.8'}), (50, {'res': '$out50.9'}), (52, {'res': '$idx52.10'}), (54, {'target': '$out50.9', 'index': '$idx52.10', 'value': '$c48.8'}), (56, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 60, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={60: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$out60.0'}), (62, {'retval': '$out60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=arr, attr=size) ['$8load_attr.3', 'arr']
    $10load_deref.4 = freevar(dtype: int64)  ['$10load_deref.4']
    $12call_method.5 = call $4load_method.1($8load_attr.3, $10load_deref.4, func=$4load_method.1, args=[Var($8load_attr.3, arraymath.py:371), Var($10load_deref.4, arraymath.py:371)], kws=(), vararg=None) ['$10load_deref.4', '$12call_method.5', '$4load_method.1', '$8load_attr.3']
    out = $12call_method.5                   ['$12call_method.5', 'out']
    $16load_deref.6 = freevar(zero: 0)       ['$16load_deref.6']
    c = $16load_deref.6                      ['$16load_deref.6', 'c']
    jump 20                                  []
label 20:
    $22load_global.0 = global(enumerate: <class 'enumerate'>) ['$22load_global.0']
    $26load_attr.2 = getattr(value=arr, attr=flat) ['$26load_attr.2', 'arr']
    $28call_function.3 = call $22load_global.0($26load_attr.2, func=$22load_global.0, args=[Var($26load_attr.2, arraymath.py:373)], kws=(), vararg=None) ['$22load_global.0', '$26load_attr.2', '$28call_function.3']
    $30get_iter.4 = getiter(value=$28call_function.3) ['$28call_function.3', '$30get_iter.4']
    $phi32.0 = $30get_iter.4                 ['$30get_iter.4', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 58             ['$32for_iter.3']
label 34:
    $34unpack_sequence.4 = exhaust_iter(value=$phi34.1, count=2) ['$34unpack_sequence.4', '$phi34.1']
    $34unpack_sequence.2 = static_getitem(value=$34unpack_sequence.4, index=0, index_var=None) ['$34unpack_sequence.2', '$34unpack_sequence.4']
    $34unpack_sequence.3 = static_getitem(value=$34unpack_sequence.4, index=1, index_var=None) ['$34unpack_sequence.3', '$34unpack_sequence.4']
    idx = $34unpack_sequence.2               ['$34unpack_sequence.2', 'idx']
    v = $34unpack_sequence.3                 ['$34unpack_sequence.3', 'v']
    $44inplace_add.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=v, static_lhs=Undefined, static_rhs=Undefined) ['$44inplace_add.7', 'c', 'v']
    c = $44inplace_add.7                     ['$44inplace_add.7', 'c']
    out[idx] = c                             ['c', 'idx', 'out']
    jump 32                                  []
label 58:
    jump 60                                  []
label 60:
    $62return_value.1 = cast(value=out)      ['$62return_value.1', 'out']
    return $62return_value.1                 ['$62return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=374)
           6	CALL_FUNCTION(arg=1, lineno=374)
           8	RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$sz4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$6call_function.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sz4.1'}), (6, {'func': '$2load_global.0', 'args': ['$sz4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    sz = arg(0, name=sz)                     ['sz']
    $2load_global.0 = global(__ufunc_or_dufunc_0x5564f8bfba9: <ufunc 'square'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(sz, func=$2load_global.0, args=[Var(sz, fvutils.py:1)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'sz']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=166)
           2	LOAD_DEREF(arg=0, lineno=166)
           4	STORE_FAST(arg=1, lineno=166)
           6	SETUP_LOOP(arg=30, lineno=167)
           8	LOAD_GLOBAL(arg=0, lineno=167)
          10	LOAD_METHOD(arg=1, lineno=167)
          12	LOAD_FAST(arg=0, lineno=167)
          14	CALL_METHOD(arg=1, lineno=167)
          16	GET_ITER(arg=None, lineno=167)
>         18	FOR_ITER(arg=16, lineno=167)
          20	STORE_FAST(arg=2, lineno=167)
          22	LOAD_FAST(arg=1, lineno=168)
          24	LOAD_FAST(arg=2, lineno=168)
          26	LOAD_METHOD(arg=2, lineno=168)
          28	CALL_METHOD(arg=0, lineno=168)
          30	INPLACE_ADD(arg=None, lineno=168)
          32	STORE_FAST(arg=1, lineno=168)
          34	JUMP_ABSOLUTE(arg=18, lineno=168)
>         36	POP_BLOCK(arg=None, lineno=168)
>         38	LOAD_FAST(arg=1, lineno=169)
          40	RETURN_VALUE(arg=None, lineno=169)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=166)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=166)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=STORE_FAST(arg=1, lineno=166)
DEBUG:numba.byteflow:stack ['$2load_deref.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=6, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=6 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=6, inst=SETUP_LOOP(arg=30, lineno=167)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=167)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=167)
DEBUG:numba.byteflow:stack ['$8load_global.0']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=167)
DEBUG:numba.byteflow:stack ['$10load_method.1']
DEBUG:numba.byteflow:dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=167)
DEBUG:numba.byteflow:stack ['$10load_method.1', '$arr12.2']
DEBUG:numba.byteflow:dispatch pc=16, inst=GET_ITER(arg=None, lineno=167)
DEBUG:numba.byteflow:stack ['$14call_method.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=18, stack=('$16get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi18.0']
DEBUG:numba.byteflow:dispatch pc=18, inst=FOR_ITER(arg=16, lineno=167)
DEBUG:numba.byteflow:stack ['$phi18.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=36, inst=POP_BLOCK(arg=None, lineno=168)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=38 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi20.0', '$phi20.1']
DEBUG:numba.byteflow:dispatch pc=20, inst=STORE_FAST(arg=2, lineno=167)
DEBUG:numba.byteflow:stack ['$phi20.0', '$phi20.1']
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0', '$c22.2']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_METHOD(arg=2, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0', '$c22.2', '$v24.3']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_METHOD(arg=0, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0', '$c22.2', '$26load_method.4']
DEBUG:numba.byteflow:dispatch pc=30, inst=INPLACE_ADD(arg=None, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0', '$c22.2', '$28call_method.5']
DEBUG:numba.byteflow:dispatch pc=32, inst=STORE_FAST(arg=1, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0', '$30inplace_add.6']
DEBUG:numba.byteflow:dispatch pc=34, inst=JUMP_ABSOLUTE(arg=18, lineno=168)
DEBUG:numba.byteflow:stack ['$phi20.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=18, stack=('$phi20.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=169)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=40, inst=RETURN_VALUE(arg=None, lineno=169)
DEBUG:numba.byteflow:stack ['$c38.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=6 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi18.0': State(pc_initial=6 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.4',
                           State(pc_initial=6 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi18.0': {('$16get_iter.4', State(pc_initial=6 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'},
             State(pc_initial=6 nstack_initial=0): {'$phi18.0': '$16get_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=6 nstack_initial=0):
AdaptBlockInfo(insts=((8, {'res': '$8load_global.0'}), (10, {'item': '$8load_global.0', 'res': '$10load_method.1'}), (12, {'res': '$arr12.2'}), (14, {'func': '$10load_method.1', 'args': ['$arr12.2'], 'res': '$14call_method.3'}), (16, {'value': '$14call_method.3', 'res': '$16get_iter.4'})), outgoing_phis={'$phi18.0': '$16get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={36: (), 20: ('$phi18.0', '$18for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$c22.2'}), (24, {'res': '$v24.3'}), (26, {'item': '$v24.3', 'res': '$26load_method.4'}), (28, {'func': '$26load_method.4', 'args': [], 'res': '$28call_method.5'}), (30, {'lhs': '$c22.2', 'rhs': '$28call_method.5', 'res': '$30inplace_add.6'}), (32, {'value': '$30inplace_add.6'}), (34, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={18: ('$phi20.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 38, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={38: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {'res': '$c38.0'}), (40, {'retval': '$c38.0', 'castval': '$40return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_deref.0 = freevar(zero: 0)        ['$2load_deref.0']
    c = $2load_deref.0                       ['$2load_deref.0', 'c']
    jump 6                                   []
label 6:
    $8load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$8load_global.0']
    $10load_method.1 = getattr(value=$8load_global.0, attr=nditer) ['$10load_method.1', '$8load_global.0']
    $14call_method.3 = call $10load_method.1(arr, func=$10load_method.1, args=[Var(arr, arraymath.py:166)], kws=(), vararg=None) ['$10load_method.1', '$14call_method.3', 'arr']
    $16get_iter.4 = getiter(value=$14call_method.3) ['$14call_method.3', '$16get_iter.4']
    $phi18.0 = $16get_iter.4                 ['$16get_iter.4', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 36             ['$18for_iter.3']
label 20:
    v = $phi20.1                             ['$phi20.1', 'v']
    $26load_method.4 = getattr(value=v, attr=item) ['$26load_method.4', 'v']
    $28call_method.5 = call $26load_method.4(func=$26load_method.4, args=[], kws=(), vararg=None) ['$26load_method.4', '$28call_method.5']
    $30inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$28call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$28call_method.5', '$30inplace_add.6', 'c']
    c = $30inplace_add.6                     ['$30inplace_add.6', 'c']
    jump 18                                  []
label 36:
    jump 38                                  []
label 38:
    $40return_value.1 = cast(value=c)        ['$40return_value.1', 'c']
    return $40return_value.1                 ['$40return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1748)
           2	LOAD_FAST(arg=0, lineno=1748)
           4	LOAD_METHOD(arg=0, lineno=1748)
           6	CALL_METHOD(arg=0, lineno=1748)
           8	RETURN_VALUE(arg=None, lineno=1748)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1748)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1748)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=1748)
DEBUG:numba.byteflow:stack ['$a2.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_METHOD(arg=0, lineno=1748)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1748)
DEBUG:numba.byteflow:stack ['$6call_method.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_method.1'}), (6, {'func': '$4load_method.1', 'args': [], 'res': '$6call_method.2'}), (8, {'retval': '$6call_method.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $4load_method.1 = getattr(value=a, attr=ravel) ['$4load_method.1', 'a']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None) ['$4load_method.1', '$6call_method.2']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1731)
           2	LOAD_FAST(arg=0, lineno=1731)
           4	LOAD_METHOD(arg=0, lineno=1731)
           6	CALL_METHOD(arg=0, lineno=1731)
           8	RETURN_VALUE(arg=None, lineno=1731)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1731)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1731)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=1731)
DEBUG:numba.byteflow:stack ['$ary2.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_METHOD(arg=0, lineno=1731)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1731)
DEBUG:numba.byteflow:stack ['$6call_method.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'func': '$4load_method.1', 'args': [], 'res': '$6call_method.2'}), (8, {'retval': '$6call_method.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=flatten) ['$4load_method.1', 'ary']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None) ['$4load_method.1', '$6call_method.2']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1757)
           2	LOAD_FAST(arg=0, lineno=1757)
           4	LOAD_METHOD(arg=0, lineno=1757)
           6	CALL_METHOD(arg=0, lineno=1757)
           8	LOAD_METHOD(arg=1, lineno=1757)
          10	LOAD_FAST(arg=0, lineno=1757)
          12	LOAD_ATTR(arg=2, lineno=1757)
          14	CALL_METHOD(arg=1, lineno=1757)
          16	RETURN_VALUE(arg=None, lineno=1757)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1757)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1757)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=1757)
DEBUG:numba.byteflow:stack ['$ary2.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_METHOD(arg=0, lineno=1757)
DEBUG:numba.byteflow:stack ['$4load_method.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=1757)
DEBUG:numba.byteflow:stack ['$6call_method.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=1757)
DEBUG:numba.byteflow:stack ['$8load_method.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=2, lineno=1757)
DEBUG:numba.byteflow:stack ['$8load_method.3', '$ary10.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=1757)
DEBUG:numba.byteflow:stack ['$8load_method.3', '$12load_attr.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=RETURN_VALUE(arg=None, lineno=1757)
DEBUG:numba.byteflow:stack ['$14call_method.6']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'func': '$4load_method.1', 'args': [], 'res': '$6call_method.2'}), (8, {'item': '$6call_method.2', 'res': '$8load_method.3'}), (10, {'res': '$ary10.4'}), (12, {'item': '$ary10.4', 'res': '$12load_attr.5'}), (14, {'func': '$8load_method.3', 'args': ['$12load_attr.5'], 'res': '$14call_method.6'}), (16, {'retval': '$14call_method.6', 'castval': '$16return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=copy) ['$4load_method.1', 'ary']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None) ['$4load_method.1', '$6call_method.2']
    $8load_method.3 = getattr(value=$6call_method.2, attr=reshape) ['$6call_method.2', '$8load_method.3']
    $12load_attr.5 = getattr(value=ary, attr=size) ['$12load_attr.5', 'ary']
    $14call_method.6 = call $8load_method.3($12load_attr.5, func=$8load_method.3, args=[Var($12load_attr.5, arrayobj.py:1757)], kws=(), vararg=None) ['$12load_attr.5', '$14call_method.6', '$8load_method.3']
    $16return_value.7 = cast(value=$14call_method.6) ['$14call_method.6', '$16return_value.7']
    return $16return_value.7                 ['$16return_value.7']

DEBUG:porepy.numerics.fv.mpsa:max igrad: 496.56623286424303
INFO:porepy.numerics.fv.mpsa:Done with subproblem 0. Elapsed time 113.0815999507904
DEBUG:porepy.numerics.fv.mpsa:number of ncasym eliminated: 1125
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=374)
           2	LOAD_GLOBAL(arg=0, lineno=374)
           4	LOAD_ATTR(arg=1, lineno=374)
           6	LOAD_FAST(arg=3, lineno=374)
           8	LOAD_ATTR(arg=2, lineno=374)
          10	LOAD_GLOBAL(arg=0, lineno=374)
          12	LOAD_ATTR(arg=3, lineno=374)
          14	LOAD_CONST(arg=1, lineno=374)
          16	CALL_FUNCTION_KW(arg=2, lineno=374)
          18	STORE_FAST(arg=4, lineno=374)
          20	LOAD_GLOBAL(arg=0, lineno=375)
          22	LOAD_METHOD(arg=4, lineno=375)
          24	LOAD_FAST(arg=3, lineno=375)
          26	LOAD_CONST(arg=2, lineno=375)
          28	LOAD_CONST(arg=3, lineno=375)
          30	BUILD_SLICE(arg=2, lineno=375)
          32	BINARY_SUBSCR(arg=None, lineno=375)
          34	CALL_METHOD(arg=1, lineno=375)
          36	LOAD_FAST(arg=4, lineno=375)
          38	LOAD_CONST(arg=4, lineno=375)
          40	LOAD_CONST(arg=2, lineno=375)
          42	BUILD_SLICE(arg=2, lineno=375)
          44	STORE_SUBSCR(arg=None, lineno=375)
          46	LOAD_FAST(arg=0, lineno=379)
          48	LOAD_CONST(arg=4, lineno=379)
          50	LOAD_CONST(arg=2, lineno=379)
          52	BUILD_SLICE(arg=2, lineno=379)
          54	BINARY_SUBSCR(arg=None, lineno=379)
          56	LOAD_FAST(arg=0, lineno=379)
          58	LOAD_CONST(arg=5, lineno=379)
          60	LOAD_CONST(arg=3, lineno=379)
          62	BUILD_SLICE(arg=2, lineno=379)
          64	BINARY_SUBSCR(arg=None, lineno=379)
          66	BINARY_SUBTRACT(arg=None, lineno=379)
          68	STORE_FAST(arg=5, lineno=379)
          70	LOAD_GLOBAL(arg=0, lineno=383)
          72	LOAD_ATTR(arg=1, lineno=383)
          74	LOAD_FAST(arg=5, lineno=383)
          76	LOAD_ATTR(arg=2, lineno=383)
          78	LOAD_CONST(arg=4, lineno=383)
          80	BINARY_ADD(arg=None, lineno=383)
          82	LOAD_GLOBAL(arg=0, lineno=383)
          84	LOAD_ATTR(arg=3, lineno=383)
          86	LOAD_CONST(arg=1, lineno=383)
          88	CALL_FUNCTION_KW(arg=2, lineno=383)
          90	STORE_FAST(arg=6, lineno=383)
          92	LOAD_GLOBAL(arg=0, lineno=384)
          94	LOAD_METHOD(arg=4, lineno=384)
          96	LOAD_FAST(arg=5, lineno=384)
          98	CALL_METHOD(arg=1, lineno=384)
         100	LOAD_FAST(arg=6, lineno=384)
         102	LOAD_CONST(arg=4, lineno=384)
         104	LOAD_CONST(arg=2, lineno=384)
         106	BUILD_SLICE(arg=2, lineno=384)
         108	STORE_SUBSCR(arg=None, lineno=384)
         110	LOAD_GLOBAL(arg=0, lineno=390)
         112	LOAD_ATTR(arg=1, lineno=390)
         114	LOAD_FAST(arg=3, lineno=390)
         116	LOAD_ATTR(arg=2, lineno=390)
         118	LOAD_CONST(arg=4, lineno=390)
         120	BINARY_ADD(arg=None, lineno=390)
         122	LOAD_GLOBAL(arg=0, lineno=390)
         124	LOAD_ATTR(arg=3, lineno=390)
         126	LOAD_CONST(arg=1, lineno=390)
         128	CALL_FUNCTION_KW(arg=2, lineno=390)
         130	STORE_FAST(arg=7, lineno=390)
         132	LOAD_GLOBAL(arg=0, lineno=391)
         134	LOAD_METHOD(arg=4, lineno=391)
         136	LOAD_GLOBAL(arg=0, lineno=391)
         138	LOAD_METHOD(arg=5, lineno=391)
         140	LOAD_FAST(arg=3, lineno=391)
         142	CALL_METHOD(arg=1, lineno=391)
         144	CALL_METHOD(arg=1, lineno=391)
         146	LOAD_FAST(arg=7, lineno=391)
         148	LOAD_CONST(arg=4, lineno=391)
         150	LOAD_CONST(arg=2, lineno=391)
         152	BUILD_SLICE(arg=2, lineno=391)
         154	STORE_SUBSCR(arg=None, lineno=391)
         156	LOAD_GLOBAL(arg=0, lineno=393)
         158	LOAD_METHOD(arg=1, lineno=393)
         160	LOAD_GLOBAL(arg=0, lineno=393)
         162	LOAD_METHOD(arg=6, lineno=393)
         164	LOAD_GLOBAL(arg=0, lineno=393)
         166	LOAD_METHOD(arg=5, lineno=393)
         168	LOAD_FAST(arg=3, lineno=393)
         170	CALL_METHOD(arg=1, lineno=393)
         172	CALL_METHOD(arg=1, lineno=393)
         174	CALL_METHOD(arg=1, lineno=393)
         176	STORE_FAST(arg=8, lineno=393)
         178	SETUP_LOOP(arg=200, lineno=396)
         180	LOAD_GLOBAL(arg=7, lineno=396)
         182	LOAD_FAST(arg=3, lineno=396)
         184	LOAD_ATTR(arg=2, lineno=396)
         186	CALL_FUNCTION(arg=1, lineno=396)
         188	GET_ITER(arg=None, lineno=396)
>        190	FOR_ITER(arg=186, lineno=396)
         192	STORE_FAST(arg=9, lineno=396)
         194	LOAD_FAST(arg=3, lineno=397)
         196	LOAD_FAST(arg=9, lineno=397)
         198	BINARY_SUBSCR(arg=None, lineno=397)
         200	STORE_FAST(arg=10, lineno=397)
         202	LOAD_GLOBAL(arg=0, lineno=398)
         204	LOAD_METHOD(arg=1, lineno=398)
         206	LOAD_FAST(arg=10, lineno=398)
         208	LOAD_FAST(arg=10, lineno=398)
         210	BUILD_TUPLE(arg=2, lineno=398)
         212	CALL_METHOD(arg=1, lineno=398)
         214	STORE_FAST(arg=11, lineno=398)
         216	SETUP_LOOP(arg=108, lineno=400)
         218	LOAD_GLOBAL(arg=7, lineno=400)
         220	LOAD_FAST(arg=10, lineno=400)
         222	CALL_FUNCTION(arg=1, lineno=400)
         224	GET_ITER(arg=None, lineno=400)
>        226	FOR_ITER(arg=96, lineno=400)
         228	STORE_FAST(arg=12, lineno=400)
         230	LOAD_FAST(arg=4, lineno=401)
         232	LOAD_FAST(arg=9, lineno=401)
         234	BINARY_SUBSCR(arg=None, lineno=401)
         236	LOAD_FAST(arg=12, lineno=401)
         238	BINARY_ADD(arg=None, lineno=401)
         240	STORE_FAST(arg=13, lineno=401)
         242	LOAD_FAST(arg=6, lineno=402)
         244	LOAD_FAST(arg=13, lineno=402)
         246	BINARY_SUBSCR(arg=None, lineno=402)
         248	STORE_FAST(arg=14, lineno=402)
         250	SETUP_LOOP(arg=70, lineno=406)
         252	LOAD_GLOBAL(arg=7, lineno=406)
         254	LOAD_FAST(arg=5, lineno=407)
         256	LOAD_FAST(arg=12, lineno=407)
         258	LOAD_FAST(arg=4, lineno=407)
         260	LOAD_FAST(arg=9, lineno=407)
         262	BINARY_SUBSCR(arg=None, lineno=407)
         264	BINARY_ADD(arg=None, lineno=407)
         266	BINARY_SUBSCR(arg=None, lineno=407)
         268	CALL_FUNCTION(arg=1, lineno=407)
         270	GET_ITER(arg=None, lineno=407)
>        272	FOR_ITER(arg=46, lineno=407)
         274	STORE_FAST(arg=15, lineno=407)
         276	LOAD_FAST(arg=1, lineno=409)
         278	LOAD_FAST(arg=14, lineno=409)
         280	BINARY_SUBSCR(arg=None, lineno=409)
         282	LOAD_FAST(arg=4, lineno=409)
         284	LOAD_FAST(arg=9, lineno=409)
         286	BINARY_SUBSCR(arg=None, lineno=409)
         288	BINARY_SUBTRACT(arg=None, lineno=409)
         290	STORE_FAST(arg=16, lineno=409)
         292	LOAD_FAST(arg=2, lineno=410)
         294	LOAD_FAST(arg=14, lineno=410)
         296	BINARY_SUBSCR(arg=None, lineno=410)
         298	LOAD_FAST(arg=11, lineno=410)
         300	LOAD_FAST(arg=12, lineno=410)
         302	LOAD_FAST(arg=16, lineno=410)
         304	BUILD_TUPLE(arg=2, lineno=410)
         306	STORE_SUBSCR(arg=None, lineno=410)
         308	LOAD_FAST(arg=14, lineno=411)
         310	LOAD_CONST(arg=4, lineno=411)
         312	INPLACE_ADD(arg=None, lineno=411)
         314	STORE_FAST(arg=14, lineno=411)
         316	JUMP_ABSOLUTE(arg=272, lineno=411)
>        320	POP_BLOCK(arg=None, lineno=411)
>        322	JUMP_ABSOLUTE(arg=226, lineno=411)
>        324	POP_BLOCK(arg=None, lineno=411)
>        326	LOAD_GLOBAL(arg=0, lineno=416)
         328	LOAD_METHOD(arg=8, lineno=416)
         330	LOAD_GLOBAL(arg=0, lineno=416)
         332	LOAD_ATTR(arg=9, lineno=416)
         334	LOAD_METHOD(arg=10, lineno=416)
         336	LOAD_FAST(arg=11, lineno=416)
         338	CALL_METHOD(arg=1, lineno=416)
         340	CALL_METHOD(arg=1, lineno=416)
         342	STORE_FAST(arg=17, lineno=416)
         344	LOAD_GLOBAL(arg=0, lineno=418)
         346	LOAD_METHOD(arg=11, lineno=418)
         348	LOAD_FAST(arg=7, lineno=419)
         350	LOAD_FAST(arg=9, lineno=419)
         352	BINARY_SUBSCR(arg=None, lineno=419)
         354	LOAD_FAST(arg=7, lineno=419)
         356	LOAD_FAST(arg=9, lineno=419)
         358	LOAD_CONST(arg=4, lineno=419)
         360	BINARY_ADD(arg=None, lineno=419)
         362	BINARY_SUBSCR(arg=None, lineno=419)
         364	CALL_METHOD(arg=2, lineno=419)
         366	STORE_FAST(arg=18, lineno=419)
         368	LOAD_FAST(arg=17, lineno=421)
         370	LOAD_FAST(arg=8, lineno=421)
         372	LOAD_FAST(arg=18, lineno=421)
         374	STORE_SUBSCR(arg=None, lineno=421)
         376	JUMP_ABSOLUTE(arg=190, lineno=421)
>        378	POP_BLOCK(arg=None, lineno=421)
>        380	LOAD_FAST(arg=8, lineno=423)
         382	RETURN_VALUE(arg=None, lineno=423)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=374)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=374)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=3, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$sz6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=3, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$10load_global.4']
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12load_attr.5']
DEBUG:numba.byteflow:dispatch pc=16, inst=CALL_FUNCTION_KW(arg=2, lineno=374)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12load_attr.5', '$const14.6']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=374)
DEBUG:numba.byteflow:stack ['$16call_function_kw.7']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=0, lineno=375)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$20load_global.8']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9']
DEBUG:numba.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10']
DEBUG:numba.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$const26.11']
DEBUG:numba.byteflow:dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$const26.11', '$const28.12']
DEBUG:numba.byteflow:dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$sz24.10', '$30build_slice.14']
DEBUG:numba.byteflow:dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=375)
DEBUG:numba.byteflow:stack ['$22load_method.9', '$32binary_subscr.15']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16']
DEBUG:numba.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$const38.18']
DEBUG:numba.byteflow:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$const38.18', '$const40.19']
DEBUG:numba.byteflow:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=375)
DEBUG:numba.byteflow:stack ['$34call_method.16', '$block_row_starts_ind36.17', '$42build_slice.21']
DEBUG:numba.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=4, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$const48.23']
DEBUG:numba.byteflow:dispatch pc=52, inst=BUILD_SLICE(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$const48.23', '$const50.24']
DEBUG:numba.byteflow:dispatch pc=54, inst=BINARY_SUBSCR(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$indptr46.22', '$52build_slice.26']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27']
DEBUG:numba.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=5, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$const58.29']
DEBUG:numba.byteflow:dispatch pc=62, inst=BUILD_SLICE(arg=2, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$const58.29', '$const60.30']
DEBUG:numba.byteflow:dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$indptr56.28', '$62build_slice.32']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$54binary_subscr.27', '$64binary_subscr.33']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=5, lineno=379)
DEBUG:numba.byteflow:stack ['$66binary_subtract.34']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=0, lineno=383)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=1, lineno=383)
DEBUG:numba.byteflow:stack ['$70load_global.35']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36']
DEBUG:numba.byteflow:dispatch pc=76, inst=LOAD_ATTR(arg=2, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$num_cols_per_row74.37']
DEBUG:numba.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=4, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$76load_attr.38']
DEBUG:numba.byteflow:dispatch pc=80, inst=BINARY_ADD(arg=None, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$76load_attr.38', '$const78.39']
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=3, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$82load_global.41']
DEBUG:numba.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=1, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42']
DEBUG:numba.byteflow:dispatch pc=88, inst=CALL_FUNCTION_KW(arg=2, lineno=383)
DEBUG:numba.byteflow:stack ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42', '$const86.43']
DEBUG:numba.byteflow:dispatch pc=90, inst=STORE_FAST(arg=6, lineno=383)
DEBUG:numba.byteflow:stack ['$88call_function_kw.44']
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_GLOBAL(arg=0, lineno=384)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_METHOD(arg=4, lineno=384)
DEBUG:numba.byteflow:stack ['$92load_global.45']
DEBUG:numba.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=384)
DEBUG:numba.byteflow:stack ['$94load_method.46']
DEBUG:numba.byteflow:dispatch pc=98, inst=CALL_METHOD(arg=1, lineno=384)
DEBUG:numba.byteflow:stack ['$94load_method.46', '$num_cols_per_row96.47']
DEBUG:numba.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=6, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48']
DEBUG:numba.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=4, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49']
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$const102.50']
DEBUG:numba.byteflow:dispatch pc=106, inst=BUILD_SLICE(arg=2, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$const102.50', '$const104.51']
DEBUG:numba.byteflow:dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=384)
DEBUG:numba.byteflow:stack ['$98call_method.48', '$row_cols_start_ind100.49', '$106build_slice.53']
DEBUG:numba.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=390)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=112, inst=LOAD_ATTR(arg=1, lineno=390)
DEBUG:numba.byteflow:stack ['$110load_global.54']
DEBUG:numba.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55']
DEBUG:numba.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=2, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$sz114.56']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=4, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$116load_attr.57']
DEBUG:numba.byteflow:dispatch pc=120, inst=BINARY_ADD(arg=None, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$116load_attr.57', '$const118.58']
DEBUG:numba.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=0, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59']
DEBUG:numba.byteflow:dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$122load_global.60']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61']
DEBUG:numba.byteflow:dispatch pc=128, inst=CALL_FUNCTION_KW(arg=2, lineno=390)
DEBUG:numba.byteflow:stack ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61', '$const126.62']
DEBUG:numba.byteflow:dispatch pc=130, inst=STORE_FAST(arg=7, lineno=390)
DEBUG:numba.byteflow:stack ['$128call_function_kw.63']
DEBUG:numba.byteflow:dispatch pc=132, inst=LOAD_GLOBAL(arg=0, lineno=391)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=134, inst=LOAD_METHOD(arg=4, lineno=391)
DEBUG:numba.byteflow:stack ['$132load_global.64']
DEBUG:numba.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=0, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_METHOD(arg=5, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$136load_global.66']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$138load_method.67']
DEBUG:numba.byteflow:dispatch pc=142, inst=CALL_METHOD(arg=1, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$138load_method.67', '$sz140.68']
DEBUG:numba.byteflow:dispatch pc=144, inst=CALL_METHOD(arg=1, lineno=391)
DEBUG:numba.byteflow:stack ['$134load_method.65', '$142call_method.69']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=7, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71']
DEBUG:numba.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=2, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$const148.72']
DEBUG:numba.byteflow:dispatch pc=152, inst=BUILD_SLICE(arg=2, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$const148.72', '$const150.73']
DEBUG:numba.byteflow:dispatch pc=154, inst=STORE_SUBSCR(arg=None, lineno=391)
DEBUG:numba.byteflow:stack ['$144call_method.70', '$full_block_starts_ind146.71', '$152build_slice.75']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=158, inst=LOAD_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$156load_global.76']
DEBUG:numba.byteflow:dispatch pc=160, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_METHOD(arg=6, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$160load_global.78']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_GLOBAL(arg=0, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_METHOD(arg=5, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$164load_global.80']
DEBUG:numba.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=3, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$166load_method.81']
DEBUG:numba.byteflow:dispatch pc=170, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$166load_method.81', '$sz168.82']
DEBUG:numba.byteflow:dispatch pc=172, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$162load_method.79', '$170call_method.83']
DEBUG:numba.byteflow:dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=393)
DEBUG:numba.byteflow:stack ['$158load_method.77', '$172call_method.84']
DEBUG:numba.byteflow:dispatch pc=176, inst=STORE_FAST(arg=8, lineno=393)
DEBUG:numba.byteflow:stack ['$174call_method.85']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=178, inst=SETUP_LOOP(arg=200, lineno=396)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=7, lineno=396)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=3, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=LOAD_ATTR(arg=2, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0', '$sz182.1']
DEBUG:numba.byteflow:dispatch pc=186, inst=CALL_FUNCTION(arg=1, lineno=396)
DEBUG:numba.byteflow:stack ['$180load_global.0', '$184load_attr.2']
DEBUG:numba.byteflow:dispatch pc=188, inst=GET_ITER(arg=None, lineno=396)
DEBUG:numba.byteflow:stack ['$186call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=190, stack=('$188get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=190 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi190.0']
DEBUG:numba.byteflow:dispatch pc=190, inst=FOR_ITER(arg=186, lineno=396)
DEBUG:numba.byteflow:stack ['$phi190.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=378, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=192, stack=('$phi190.0', '$190for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=192 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=378, inst=POP_BLOCK(arg=None, lineno=421)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=380, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=192 nstack_initial=2), State(pc_initial=380 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi192.0', '$phi192.1']
DEBUG:numba.byteflow:dispatch pc=192, inst=STORE_FAST(arg=9, lineno=396)
DEBUG:numba.byteflow:stack ['$phi192.0', '$phi192.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0']
DEBUG:numba.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=9, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$sz194.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$sz194.2', '$iter1196.3']
DEBUG:numba.byteflow:dispatch pc=200, inst=STORE_FAST(arg=10, lineno=397)
DEBUG:numba.byteflow:stack ['$phi192.0', '$198binary_subscr.4']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=0, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_METHOD(arg=1, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$202load_global.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=10, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=10, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$n206.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BUILD_TUPLE(arg=2, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$n206.7', '$n208.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=CALL_METHOD(arg=1, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$204load_method.6', '$210build_tuple.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=STORE_FAST(arg=11, lineno=398)
DEBUG:numba.byteflow:stack ['$phi192.0', '$212call_method.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=216, stack=('$phi192.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=380 nstack_initial=0), State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=8, lineno=423)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=382, inst=RETURN_VALUE(arg=None, lineno=423)
DEBUG:numba.byteflow:stack ['$inv_vals380.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=216, inst=SETUP_LOOP(arg=108, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_GLOBAL(arg=7, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=10, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$218load_global.1']
DEBUG:numba.byteflow:dispatch pc=222, inst=CALL_FUNCTION(arg=1, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$218load_global.1', '$n220.2']
DEBUG:numba.byteflow:dispatch pc=224, inst=GET_ITER(arg=None, lineno=400)
DEBUG:numba.byteflow:stack ['$phi216.0', '$222call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=226, stack=('$phi216.0', '$224get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi226.0', '$phi226.1']
DEBUG:numba.byteflow:dispatch pc=226, inst=FOR_ITER(arg=96, lineno=400)
DEBUG:numba.byteflow:stack ['$phi226.0', '$phi226.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=324, stack=('$phi226.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=228, stack=('$phi226.0', '$phi226.1', '$226for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=324 nstack_initial=1), State(pc_initial=228 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi324.0']
DEBUG:numba.byteflow:dispatch pc=324, inst=POP_BLOCK(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi324.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=326, stack=('$phi324.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=228 nstack_initial=3), State(pc_initial=326 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi228.0', '$phi228.1', '$phi228.2']
DEBUG:numba.byteflow:dispatch pc=228, inst=STORE_FAST(arg=12, lineno=400)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$phi228.2']
DEBUG:numba.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=4, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1']
DEBUG:numba.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$block_row_starts_ind230.3']
DEBUG:numba.byteflow:dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$block_row_starts_ind230.3', '$iter1232.4']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=12, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$234binary_subscr.5']
DEBUG:numba.byteflow:dispatch pc=238, inst=BINARY_ADD(arg=None, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$234binary_subscr.5', '$iter2236.6']
DEBUG:numba.byteflow:dispatch pc=240, inst=STORE_FAST(arg=13, lineno=401)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$238binary_add.7']
DEBUG:numba.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=6, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1']
DEBUG:numba.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=13, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$row_cols_start_ind242.8']
DEBUG:numba.byteflow:dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$row_cols_start_ind242.8', '$global_row244.9']
DEBUG:numba.byteflow:dispatch pc=248, inst=STORE_FAST(arg=14, lineno=402)
DEBUG:numba.byteflow:stack ['$phi228.0', '$phi228.1', '$246binary_subscr.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=250, stack=('$phi228.0', '$phi228.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=326 nstack_initial=1), State(pc_initial=250 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_GLOBAL(arg=0, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_METHOD(arg=8, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$326load_global.1']
DEBUG:numba.byteflow:dispatch pc=330, inst=LOAD_GLOBAL(arg=0, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=9, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$330load_global.3']
DEBUG:numba.byteflow:dispatch pc=334, inst=LOAD_METHOD(arg=10, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$332load_attr.4']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=11, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$334load_method.5']
DEBUG:numba.byteflow:dispatch pc=338, inst=CALL_METHOD(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$334load_method.5', '$loc_mat336.6']
DEBUG:numba.byteflow:dispatch pc=340, inst=CALL_METHOD(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$328load_method.2', '$338call_method.7']
DEBUG:numba.byteflow:dispatch pc=342, inst=STORE_FAST(arg=17, lineno=416)
DEBUG:numba.byteflow:stack ['$phi326.0', '$340call_method.8']
DEBUG:numba.byteflow:dispatch pc=344, inst=LOAD_GLOBAL(arg=0, lineno=418)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=346, inst=LOAD_METHOD(arg=11, lineno=418)
DEBUG:numba.byteflow:stack ['$phi326.0', '$344load_global.9']
DEBUG:numba.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=7, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10']
DEBUG:numba.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=9, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$full_block_starts_ind348.11']
DEBUG:numba.byteflow:dispatch pc=352, inst=BINARY_SUBSCR(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$full_block_starts_ind348.11', '$iter1350.12']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=7, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13']
DEBUG:numba.byteflow:dispatch pc=356, inst=LOAD_FAST(arg=9, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14']
DEBUG:numba.byteflow:dispatch pc=358, inst=LOAD_CONST(arg=4, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$iter1356.15']
DEBUG:numba.byteflow:dispatch pc=360, inst=BINARY_ADD(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$iter1356.15', '$const358.16']
DEBUG:numba.byteflow:dispatch pc=362, inst=BINARY_SUBSCR(arg=None, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$full_block_starts_ind354.14', '$360binary_add.17']
DEBUG:numba.byteflow:dispatch pc=364, inst=CALL_METHOD(arg=2, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$346load_method.10', '$352binary_subscr.13', '$362binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=366, inst=STORE_FAST(arg=18, lineno=419)
DEBUG:numba.byteflow:stack ['$phi326.0', '$364call_method.19']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=17, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20']
DEBUG:numba.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=18, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20', '$inv_vals370.21']
DEBUG:numba.byteflow:dispatch pc=374, inst=STORE_SUBSCR(arg=None, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0', '$inv_mat368.20', '$inv_vals370.21', '$loc_ind372.22']
DEBUG:numba.byteflow:dispatch pc=376, inst=JUMP_ABSOLUTE(arg=190, lineno=421)
DEBUG:numba.byteflow:stack ['$phi326.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=190, stack=('$phi326.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=250 nstack_initial=2), State(pc_initial=190 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=250, inst=SETUP_LOOP(arg=70, lineno=406)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_GLOBAL(arg=7, lineno=406)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1']
DEBUG:numba.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=5, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2']
DEBUG:numba.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=12, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3']
DEBUG:numba.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=4, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=9, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$block_row_starts_ind258.5']
DEBUG:numba.byteflow:dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$block_row_starts_ind258.5', '$iter1260.6']
DEBUG:numba.byteflow:dispatch pc=264, inst=BINARY_ADD(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$iter2256.4', '$262binary_subscr.7']
DEBUG:numba.byteflow:dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$num_cols_per_row254.3', '$264binary_add.8']
DEBUG:numba.byteflow:dispatch pc=268, inst=CALL_FUNCTION(arg=1, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$252load_global.2', '$266binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=270, inst=GET_ITER(arg=None, lineno=407)
DEBUG:numba.byteflow:stack ['$phi250.0', '$phi250.1', '$268call_function.10']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=272, stack=('$phi250.0', '$phi250.1', '$270get_iter.11'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=190 nstack_initial=1), State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi272.0', '$phi272.1', '$phi272.2']
DEBUG:numba.byteflow:dispatch pc=272, inst=FOR_ITER(arg=46, lineno=407)
DEBUG:numba.byteflow:stack ['$phi272.0', '$phi272.1', '$phi272.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=320, stack=('$phi272.0', '$phi272.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=274, stack=('$phi272.0', '$phi272.1', '$phi272.2', '$272for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=320 nstack_initial=2), State(pc_initial=274 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi320.0', '$phi320.1']
DEBUG:numba.byteflow:dispatch pc=320, inst=POP_BLOCK(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi320.0', '$phi320.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=322, stack=('$phi320.0', '$phi320.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=274 nstack_initial=4), State(pc_initial=322 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi274.0', '$phi274.1', '$phi274.2', '$phi274.3']
DEBUG:numba.byteflow:dispatch pc=274, inst=STORE_FAST(arg=15, lineno=407)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$phi274.3']
DEBUG:numba.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=1, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=278, inst=LOAD_FAST(arg=14, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$ind276.4']
DEBUG:numba.byteflow:dispatch pc=280, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$ind276.4', '$data_counter278.5']
DEBUG:numba.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6']
DEBUG:numba.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=9, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$block_row_starts_ind282.7']
DEBUG:numba.byteflow:dispatch pc=286, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$block_row_starts_ind282.7', '$iter1284.8']
DEBUG:numba.byteflow:dispatch pc=288, inst=BINARY_SUBTRACT(arg=None, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$280binary_subscr.6', '$286binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=290, inst=STORE_FAST(arg=16, lineno=409)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$288binary_subtract.10']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=14, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data292.11']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBSCR(arg=None, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data292.11', '$data_counter294.12']
DEBUG:numba.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=11, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=12, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=16, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$iter2300.15']
DEBUG:numba.byteflow:dispatch pc=304, inst=BUILD_TUPLE(arg=2, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$iter2300.15', '$loc_col302.16']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=410)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$296binary_subscr.13', '$loc_mat298.14', '$304build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=14, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_CONST(arg=4, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data_counter308.18']
DEBUG:numba.byteflow:dispatch pc=312, inst=INPLACE_ADD(arg=None, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$data_counter308.18', '$const310.19']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=14, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2', '$312inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=316, inst=JUMP_ABSOLUTE(arg=272, lineno=411)
DEBUG:numba.byteflow:stack ['$phi274.0', '$phi274.1', '$phi274.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=272, stack=('$phi274.0', '$phi274.1', '$phi274.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=322 nstack_initial=2), State(pc_initial=272 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi322.0', '$phi322.1']
DEBUG:numba.byteflow:dispatch pc=322, inst=JUMP_ABSOLUTE(arg=226, lineno=411)
DEBUG:numba.byteflow:stack ['$phi322.0', '$phi322.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=226, stack=('$phi322.0', '$phi322.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=272 nstack_initial=3), State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=226 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=274 nstack_initial=4): {'$phi274.3'},
             State(pc_initial=272 nstack_initial=3): {'$phi272.2'},
             State(pc_initial=322 nstack_initial=2): set(),
             State(pc_initial=190 nstack_initial=1): {'$phi190.0'},
             State(pc_initial=378 nstack_initial=0): set(),
             State(pc_initial=380 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=2): {'$phi192.1'},
             State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=226 nstack_initial=2): {'$phi226.1'},
             State(pc_initial=228 nstack_initial=3): {'$phi228.2'},
             State(pc_initial=324 nstack_initial=1): set(),
             State(pc_initial=250 nstack_initial=2): set(),
             State(pc_initial=326 nstack_initial=1): set(),
             State(pc_initial=320 nstack_initial=2): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=216 nstack_initial=1): set()})
DEBUG:numba.byteflow:defmap: {'$phi190.0': State(pc_initial=178 nstack_initial=0),
 '$phi192.1': State(pc_initial=190 nstack_initial=1),
 '$phi226.1': State(pc_initial=216 nstack_initial=1),
 '$phi228.2': State(pc_initial=226 nstack_initial=2),
 '$phi272.2': State(pc_initial=250 nstack_initial=2),
 '$phi274.3': State(pc_initial=272 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi326.0',
                            State(pc_initial=326 nstack_initial=1))},
             '$phi192.0': {('$phi190.0',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$phi192.0',
                            State(pc_initial=192 nstack_initial=2))},
             '$phi226.0': {('$phi216.0',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi322.0',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi322.1',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi228.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi228.1': {('$phi226.1',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=3))},
             '$phi250.1': {('$phi228.1',
                            State(pc_initial=228 nstack_initial=3))},
             '$phi272.0': {('$phi250.0',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.0',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi272.1': {('$phi250.1',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.1',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi274.2',
                            State(pc_initial=274 nstack_initial=4))},
             '$phi274.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.1': {('$phi272.1',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.2': {('$phi272.2',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.1': {('$phi272.1',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi322.0': {('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.1': {('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi324.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi326.0': {('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi272.0',
                            State(pc_initial=272 nstack_initial=3)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi272.1',
                            State(pc_initial=272 nstack_initial=3)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2)),
                           ('$phi272.2',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi324.0',
                            State(pc_initial=324 nstack_initial=1))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi190.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi192.1': {('$190for_iter.2',
                            State(pc_initial=190 nstack_initial=1))},
             '$phi216.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi226.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi228.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi228.2': {('$226for_iter.3',
                            State(pc_initial=226 nstack_initial=2))},
             '$phi250.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi250.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi272.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi272.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi274.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi274.2': {('$270get_iter.11',
                            State(pc_initial=250 nstack_initial=2))},
             '$phi274.3': {('$272for_iter.4',
                            State(pc_initial=272 nstack_initial=3))},
             '$phi320.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi320.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi322.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi322.1': {('$224get_iter.4',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi324.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))},
             '$phi326.0': {('$188get_iter.4',
                            State(pc_initial=178 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi190.0': {('$188get_iter.4', State(pc_initial=178 nstack_initial=0))},
 '$phi192.1': {('$190for_iter.2', State(pc_initial=190 nstack_initial=1))},
 '$phi226.1': {('$224get_iter.4', State(pc_initial=216 nstack_initial=1))},
 '$phi228.2': {('$226for_iter.3', State(pc_initial=226 nstack_initial=2))},
 '$phi272.2': {('$270get_iter.11', State(pc_initial=250 nstack_initial=2))},
 '$phi274.3': {('$272for_iter.4', State(pc_initial=272 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=272 nstack_initial=3): {'$phi274.3': '$272for_iter.4'},
             State(pc_initial=190 nstack_initial=1): {'$phi192.1': '$190for_iter.2'},
             State(pc_initial=226 nstack_initial=2): {'$phi228.2': '$226for_iter.3'},
             State(pc_initial=250 nstack_initial=2): {'$phi272.2': '$270get_iter.11'},
             State(pc_initial=178 nstack_initial=0): {'$phi190.0': '$188get_iter.4'},
             State(pc_initial=216 nstack_initial=1): {'$phi226.1': '$224get_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$sz6.2'}), (8, {'item': '$sz6.2', 'res': '$8load_attr.3'}), (10, {'res': '$10load_global.4'}), (12, {'item': '$10load_global.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'func': '$4load_attr.1', 'args': ['$8load_attr.3', '$12load_attr.5'], 'names': '$const14.6', 'res': '$16call_function_kw.7'}), (18, {'value': '$16call_function_kw.7'}), (20, {'res': '$20load_global.8'}), (22, {'item': '$20load_global.8', 'res': '$22load_method.9'}), (24, {'res': '$sz24.10'}), (26, {'res': '$const26.11'}), (28, {'res': '$const28.12'}), (30, {'start': '$const26.11', 'stop': '$const28.12', 'step': None, 'res': '$30build_slice.14', 'slicevar': '$30build_slice.13'}), (32, {'index': '$30build_slice.14', 'target': '$sz24.10', 'res': '$32binary_subscr.15'}), (34, {'func': '$22load_method.9', 'args': ['$32binary_subscr.15'], 'res': '$34call_method.16'}), (36, {'res': '$block_row_starts_ind36.17'}), (38, {'res': '$const38.18'}), (40, {'res': '$const40.19'}), (42, {'start': '$const38.18', 'stop': '$const40.19', 'step': None, 'res': '$42build_slice.21', 'slicevar': '$42build_slice.20'}), (44, {'target': '$block_row_starts_ind36.17', 'index': '$42build_slice.21', 'value': '$34call_method.16'}), (46, {'res': '$indptr46.22'}), (48, {'res': '$const48.23'}), (50, {'res': '$const50.24'}), (52, {'start': '$const48.23', 'stop': '$const50.24', 'step': None, 'res': '$52build_slice.26', 'slicevar': '$52build_slice.25'}), (54, {'index': '$52build_slice.26', 'target': '$indptr46.22', 'res': '$54binary_subscr.27'}), (56, {'res': '$indptr56.28'}), (58, {'res': '$const58.29'}), (60, {'res': '$const60.30'}), (62, {'start': '$const58.29', 'stop': '$const60.30', 'step': None, 'res': '$62build_slice.32', 'slicevar': '$62build_slice.31'}), (64, {'index': '$62build_slice.32', 'target': '$indptr56.28', 'res': '$64binary_subscr.33'}), (66, {'lhs': '$54binary_subscr.27', 'rhs': '$64binary_subscr.33', 'res': '$66binary_subtract.34'}), (68, {'value': '$66binary_subtract.34'}), (70, {'res': '$70load_global.35'}), (72, {'item': '$70load_global.35', 'res': '$72load_attr.36'}), (74, {'res': '$num_cols_per_row74.37'}), (76, {'item': '$num_cols_per_row74.37', 'res': '$76load_attr.38'}), (78, {'res': '$const78.39'}), (80, {'lhs': '$76load_attr.38', 'rhs': '$const78.39', 'res': '$80binary_add.40'}), (82, {'res': '$82load_global.41'}), (84, {'item': '$82load_global.41', 'res': '$84load_attr.42'}), (86, {'res': '$const86.43'}), (88, {'func': '$72load_attr.36', 'args': ['$80binary_add.40', '$84load_attr.42'], 'names': '$const86.43', 'res': '$88call_function_kw.44'}), (90, {'value': '$88call_function_kw.44'}), (92, {'res': '$92load_global.45'}), (94, {'item': '$92load_global.45', 'res': '$94load_method.46'}), (96, {'res': '$num_cols_per_row96.47'}), (98, {'func': '$94load_method.46', 'args': ['$num_cols_per_row96.47'], 'res': '$98call_method.48'}), (100, {'res': '$row_cols_start_ind100.49'}), (102, {'res': '$const102.50'}), (104, {'res': '$const104.51'}), (106, {'start': '$const102.50', 'stop': '$const104.51', 'step': None, 'res': '$106build_slice.53', 'slicevar': '$106build_slice.52'}), (108, {'target': '$row_cols_start_ind100.49', 'index': '$106build_slice.53', 'value': '$98call_method.48'}), (110, {'res': '$110load_global.54'}), (112, {'item': '$110load_global.54', 'res': '$112load_attr.55'}), (114, {'res': '$sz114.56'}), (116, {'item': '$sz114.56', 'res': '$116load_attr.57'}), (118, {'res': '$const118.58'}), (120, {'lhs': '$116load_attr.57', 'rhs': '$const118.58', 'res': '$120binary_add.59'}), (122, {'res': '$122load_global.60'}), (124, {'item': '$122load_global.60', 'res': '$124load_attr.61'}), (126, {'res': '$const126.62'}), (128, {'func': '$112load_attr.55', 'args': ['$120binary_add.59', '$124load_attr.61'], 'names': '$const126.62', 'res': '$128call_function_kw.63'}), (130, {'value': '$128call_function_kw.63'}), (132, {'res': '$132load_global.64'}), (134, {'item': '$132load_global.64', 'res': '$134load_method.65'}), (136, {'res': '$136load_global.66'}), (138, {'item': '$136load_global.66', 'res': '$138load_method.67'}), (140, {'res': '$sz140.68'}), (142, {'func': '$138load_method.67', 'args': ['$sz140.68'], 'res': '$142call_method.69'}), (144, {'func': '$134load_method.65', 'args': ['$142call_method.69'], 'res': '$144call_method.70'}), (146, {'res': '$full_block_starts_ind146.71'}), (148, {'res': '$const148.72'}), (150, {'res': '$const150.73'}), (152, {'start': '$const148.72', 'stop': '$const150.73', 'step': None, 'res': '$152build_slice.75', 'slicevar': '$152build_slice.74'}), (154, {'target': '$full_block_starts_ind146.71', 'index': '$152build_slice.75', 'value': '$144call_method.70'}), (156, {'res': '$156load_global.76'}), (158, {'item': '$156load_global.76', 'res': '$158load_method.77'}), (160, {'res': '$160load_global.78'}), (162, {'item': '$160load_global.78', 'res': '$162load_method.79'}), (164, {'res': '$164load_global.80'}), (166, {'item': '$164load_global.80', 'res': '$166load_method.81'}), (168, {'res': '$sz168.82'}), (170, {'func': '$166load_method.81', 'args': ['$sz168.82'], 'res': '$170call_method.83'}), (172, {'func': '$162load_method.79', 'args': ['$170call_method.83'], 'res': '$172call_method.84'}), (174, {'func': '$158load_method.77', 'args': ['$172call_method.84'], 'res': '$174call_method.85'}), (176, {'value': '$174call_method.85'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$180load_global.0'}), (182, {'res': '$sz182.1'}), (184, {'item': '$sz182.1', 'res': '$184load_attr.2'}), (186, {'func': '$180load_global.0', 'args': ['$184load_attr.2'], 'res': '$186call_function.3'}), (188, {'value': '$186call_function.3', 'res': '$188get_iter.4'})), outgoing_phis={'$phi190.0': '$188get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ('$188get_iter.4',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=190 nstack_initial=1):
AdaptBlockInfo(insts=((190, {'iterator': '$phi190.0', 'pair': '$190for_iter.1', 'indval': '$190for_iter.2', 'pred': '$190for_iter.3'}),), outgoing_phis={'$phi192.1': '$190for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={378: (), 192: ('$phi190.0', '$190for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=192 nstack_initial=2):
AdaptBlockInfo(insts=((192, {'value': '$phi192.1'}), (194, {'res': '$sz194.2'}), (196, {'res': '$iter1196.3'}), (198, {'index': '$iter1196.3', 'target': '$sz194.2', 'res': '$198binary_subscr.4'}), (200, {'value': '$198binary_subscr.4'}), (202, {'res': '$202load_global.5'}), (204, {'item': '$202load_global.5', 'res': '$204load_method.6'}), (206, {'res': '$n206.7'}), (208, {'res': '$n208.8'}), (210, {'items': ['$n206.7', '$n208.8'], 'res': '$210build_tuple.9'}), (212, {'func': '$204load_method.6', 'args': ['$210build_tuple.9'], 'res': '$212call_method.10'}), (214, {'value': '$212call_method.10'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={216: ('$phi192.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=216 nstack_initial=1):
AdaptBlockInfo(insts=((218, {'res': '$218load_global.1'}), (220, {'res': '$n220.2'}), (222, {'func': '$218load_global.1', 'args': ['$n220.2'], 'res': '$222call_function.3'}), (224, {'value': '$222call_function.3', 'res': '$224get_iter.4'})), outgoing_phis={'$phi226.1': '$224get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={226: ('$phi216.0', '$224get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=226 nstack_initial=2):
AdaptBlockInfo(insts=((226, {'iterator': '$phi226.1', 'pair': '$226for_iter.2', 'indval': '$226for_iter.3', 'pred': '$226for_iter.4'}),), outgoing_phis={'$phi228.2': '$226for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={324: ('$phi226.0',), 228: ('$phi226.0', '$phi226.1', '$226for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=228 nstack_initial=3):
AdaptBlockInfo(insts=((228, {'value': '$phi228.2'}), (230, {'res': '$block_row_starts_ind230.3'}), (232, {'res': '$iter1232.4'}), (234, {'index': '$iter1232.4', 'target': '$block_row_starts_ind230.3', 'res': '$234binary_subscr.5'}), (236, {'res': '$iter2236.6'}), (238, {'lhs': '$234binary_subscr.5', 'rhs': '$iter2236.6', 'res': '$238binary_add.7'}), (240, {'value': '$238binary_add.7'}), (242, {'res': '$row_cols_start_ind242.8'}), (244, {'res': '$global_row244.9'}), (246, {'index': '$global_row244.9', 'target': '$row_cols_start_ind242.8', 'res': '$246binary_subscr.10'}), (248, {'value': '$246binary_subscr.10'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={250: ('$phi228.0', '$phi228.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=250 nstack_initial=2):
AdaptBlockInfo(insts=((252, {'res': '$252load_global.2'}), (254, {'res': '$num_cols_per_row254.3'}), (256, {'res': '$iter2256.4'}), (258, {'res': '$block_row_starts_ind258.5'}), (260, {'res': '$iter1260.6'}), (262, {'index': '$iter1260.6', 'target': '$block_row_starts_ind258.5', 'res': '$262binary_subscr.7'}), (264, {'lhs': '$iter2256.4', 'rhs': '$262binary_subscr.7', 'res': '$264binary_add.8'}), (266, {'index': '$264binary_add.8', 'target': '$num_cols_per_row254.3', 'res': '$266binary_subscr.9'}), (268, {'func': '$252load_global.2', 'args': ['$266binary_subscr.9'], 'res': '$268call_function.10'}), (270, {'value': '$268call_function.10', 'res': '$270get_iter.11'})), outgoing_phis={'$phi272.2': '$270get_iter.11'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={272: ('$phi250.0', '$phi250.1', '$270get_iter.11')})
DEBUG:numba.byteflow:block_infos State(pc_initial=272 nstack_initial=3):
AdaptBlockInfo(insts=((272, {'iterator': '$phi272.2', 'pair': '$272for_iter.3', 'indval': '$272for_iter.4', 'pred': '$272for_iter.5'}),), outgoing_phis={'$phi274.3': '$272for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={320: ('$phi272.0', '$phi272.1'), 274: ('$phi272.0', '$phi272.1', '$phi272.2', '$272for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=274 nstack_initial=4):
AdaptBlockInfo(insts=((274, {'value': '$phi274.3'}), (276, {'res': '$ind276.4'}), (278, {'res': '$data_counter278.5'}), (280, {'index': '$data_counter278.5', 'target': '$ind276.4', 'res': '$280binary_subscr.6'}), (282, {'res': '$block_row_starts_ind282.7'}), (284, {'res': '$iter1284.8'}), (286, {'index': '$iter1284.8', 'target': '$block_row_starts_ind282.7', 'res': '$286binary_subscr.9'}), (288, {'lhs': '$280binary_subscr.6', 'rhs': '$286binary_subscr.9', 'res': '$288binary_subtract.10'}), (290, {'value': '$288binary_subtract.10'}), (292, {'res': '$data292.11'}), (294, {'res': '$data_counter294.12'}), (296, {'index': '$data_counter294.12', 'target': '$data292.11', 'res': '$296binary_subscr.13'}), (298, {'res': '$loc_mat298.14'}), (300, {'res': '$iter2300.15'}), (302, {'res': '$loc_col302.16'}), (304, {'items': ['$iter2300.15', '$loc_col302.16'], 'res': '$304build_tuple.17'}), (306, {'target': '$loc_mat298.14', 'index': '$304build_tuple.17', 'value': '$296binary_subscr.13'}), (308, {'res': '$data_counter308.18'}), (310, {'res': '$const310.19'}), (312, {'lhs': '$data_counter308.18', 'rhs': '$const310.19', 'res': '$312inplace_add.20'}), (314, {'value': '$312inplace_add.20'}), (316, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={272: ('$phi274.0', '$phi274.1', '$phi274.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=320 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={322: ('$phi320.0', '$phi320.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=322 nstack_initial=2):
AdaptBlockInfo(insts=((322, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={226: ('$phi322.0', '$phi322.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=324 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 326, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={326: ('$phi324.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=326 nstack_initial=1):
AdaptBlockInfo(insts=((326, {'res': '$326load_global.1'}), (328, {'item': '$326load_global.1', 'res': '$328load_method.2'}), (330, {'res': '$330load_global.3'}), (332, {'item': '$330load_global.3', 'res': '$332load_attr.4'}), (334, {'item': '$332load_attr.4', 'res': '$334load_method.5'}), (336, {'res': '$loc_mat336.6'}), (338, {'func': '$334load_method.5', 'args': ['$loc_mat336.6'], 'res': '$338call_method.7'}), (340, {'func': '$328load_method.2', 'args': ['$338call_method.7'], 'res': '$340call_method.8'}), (342, {'value': '$340call_method.8'}), (344, {'res': '$344load_global.9'}), (346, {'item': '$344load_global.9', 'res': '$346load_method.10'}), (348, {'res': '$full_block_starts_ind348.11'}), (350, {'res': '$iter1350.12'}), (352, {'index': '$iter1350.12', 'target': '$full_block_starts_ind348.11', 'res': '$352binary_subscr.13'}), (354, {'res': '$full_block_starts_ind354.14'}), (356, {'res': '$iter1356.15'}), (358, {'res': '$const358.16'}), (360, {'lhs': '$iter1356.15', 'rhs': '$const358.16', 'res': '$360binary_add.17'}), (362, {'index': '$360binary_add.17', 'target': '$full_block_starts_ind354.14', 'res': '$362binary_subscr.18'}), (364, {'func': '$346load_method.10', 'args': ['$352binary_subscr.13', '$362binary_subscr.18'], 'res': '$364call_method.19'}), (366, {'value': '$364call_method.19'}), (368, {'res': '$inv_mat368.20'}), (370, {'res': '$inv_vals370.21'}), (372, {'res': '$loc_ind372.22'}), (374, {'target': '$inv_vals370.21', 'index': '$loc_ind372.22', 'value': '$inv_mat368.20'}), (376, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={190: ('$phi326.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={380: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=380 nstack_initial=0):
AdaptBlockInfo(insts=((380, {'res': '$inv_vals380.0'}), (382, {'retval': '$inv_vals380.0', 'castval': '$382return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    indptr = arg(0, name=indptr)             ['indptr']
    ind = arg(1, name=ind)                   ['ind']
    data = arg(2, name=data)                 ['data']
    sz = arg(3, name=sz)                     ['sz']
    $2load_global.0 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=zeros) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=sz, attr=size) ['$8load_attr.3', 'sz']
    $10load_global.4 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$10load_global.4']
    $12load_attr.5 = getattr(value=$10load_global.4, attr=int32) ['$10load_global.4', '$12load_attr.5']
    $16call_function_kw.7 = call $4load_attr.1($8load_attr.3, func=$4load_attr.1, args=[Var($8load_attr.3, fvutils.py:374)], kws=[('dtype', Var($12load_attr.5, fvutils.py:374))], vararg=None) ['$12load_attr.5', '$16call_function_kw.7', '$4load_attr.1', '$8load_attr.3']
    block_row_starts_ind = $16call_function_kw.7 ['$16call_function_kw.7', 'block_row_starts_ind']
    $20load_global.8 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$20load_global.8']
    $22load_method.9 = getattr(value=$20load_global.8, attr=cumsum) ['$20load_global.8', '$22load_method.9']
    $const26.11 = const(NoneType, None)      ['$const26.11']
    $const28.12 = const(int, -1)             ['$const28.12']
    $30build_slice.13 = global(slice: <class 'slice'>) ['$30build_slice.13']
    $30build_slice.14 = call $30build_slice.13($const26.11, $const28.12, func=$30build_slice.13, args=(Var($const26.11, fvutils.py:375), Var($const28.12, fvutils.py:375)), kws=(), vararg=None) ['$30build_slice.13', '$30build_slice.14', '$const26.11', '$const28.12']
    $32binary_subscr.15 = getitem(value=sz, index=$30build_slice.14) ['$30build_slice.14', '$32binary_subscr.15', 'sz']
    $34call_method.16 = call $22load_method.9($32binary_subscr.15, func=$22load_method.9, args=[Var($32binary_subscr.15, fvutils.py:375)], kws=(), vararg=None) ['$22load_method.9', '$32binary_subscr.15', '$34call_method.16']
    $const38.18 = const(int, 1)              ['$const38.18']
    $const40.19 = const(NoneType, None)      ['$const40.19']
    $42build_slice.20 = global(slice: <class 'slice'>) ['$42build_slice.20']
    $42build_slice.21 = call $42build_slice.20($const38.18, $const40.19, func=$42build_slice.20, args=(Var($const38.18, fvutils.py:375), Var($const40.19, fvutils.py:375)), kws=(), vararg=None) ['$42build_slice.20', '$42build_slice.21', '$const38.18', '$const40.19']
    block_row_starts_ind[$42build_slice.21] = $34call_method.16 ['$34call_method.16', '$42build_slice.21', 'block_row_starts_ind']
    $const48.23 = const(int, 1)              ['$const48.23']
    $const50.24 = const(NoneType, None)      ['$const50.24']
    $52build_slice.25 = global(slice: <class 'slice'>) ['$52build_slice.25']
    $52build_slice.26 = call $52build_slice.25($const48.23, $const50.24, func=$52build_slice.25, args=(Var($const48.23, fvutils.py:379), Var($const50.24, fvutils.py:379)), kws=(), vararg=None) ['$52build_slice.25', '$52build_slice.26', '$const48.23', '$const50.24']
    $54binary_subscr.27 = getitem(value=indptr, index=$52build_slice.26) ['$52build_slice.26', '$54binary_subscr.27', 'indptr']
    $const58.29 = const(int, 0)              ['$const58.29']
    $const60.30 = const(int, -1)             ['$const60.30']
    $62build_slice.31 = global(slice: <class 'slice'>) ['$62build_slice.31']
    $62build_slice.32 = call $62build_slice.31($const58.29, $const60.30, func=$62build_slice.31, args=(Var($const58.29, fvutils.py:379), Var($const60.30, fvutils.py:379)), kws=(), vararg=None) ['$62build_slice.31', '$62build_slice.32', '$const58.29', '$const60.30']
    $64binary_subscr.33 = getitem(value=indptr, index=$62build_slice.32) ['$62build_slice.32', '$64binary_subscr.33', 'indptr']
    $66binary_subtract.34 = $54binary_subscr.27 - $64binary_subscr.33 ['$54binary_subscr.27', '$64binary_subscr.33', '$66binary_subtract.34']
    num_cols_per_row = $66binary_subtract.34 ['$66binary_subtract.34', 'num_cols_per_row']
    $70load_global.35 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$70load_global.35']
    $72load_attr.36 = getattr(value=$70load_global.35, attr=zeros) ['$70load_global.35', '$72load_attr.36']
    $76load_attr.38 = getattr(value=num_cols_per_row, attr=size) ['$76load_attr.38', 'num_cols_per_row']
    $const78.39 = const(int, 1)              ['$const78.39']
    $80binary_add.40 = $76load_attr.38 + $const78.39 ['$76load_attr.38', '$80binary_add.40', '$const78.39']
    $82load_global.41 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$82load_global.41']
    $84load_attr.42 = getattr(value=$82load_global.41, attr=int32) ['$82load_global.41', '$84load_attr.42']
    $88call_function_kw.44 = call $72load_attr.36($80binary_add.40, func=$72load_attr.36, args=[Var($80binary_add.40, fvutils.py:383)], kws=[('dtype', Var($84load_attr.42, fvutils.py:383))], vararg=None) ['$72load_attr.36', '$80binary_add.40', '$84load_attr.42', '$88call_function_kw.44']
    row_cols_start_ind = $88call_function_kw.44 ['$88call_function_kw.44', 'row_cols_start_ind']
    $92load_global.45 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$92load_global.45']
    $94load_method.46 = getattr(value=$92load_global.45, attr=cumsum) ['$92load_global.45', '$94load_method.46']
    $98call_method.48 = call $94load_method.46(num_cols_per_row, func=$94load_method.46, args=[Var(num_cols_per_row, fvutils.py:379)], kws=(), vararg=None) ['$94load_method.46', '$98call_method.48', 'num_cols_per_row']
    $const102.50 = const(int, 1)             ['$const102.50']
    $const104.51 = const(NoneType, None)     ['$const104.51']
    $106build_slice.52 = global(slice: <class 'slice'>) ['$106build_slice.52']
    $106build_slice.53 = call $106build_slice.52($const102.50, $const104.51, func=$106build_slice.52, args=(Var($const102.50, fvutils.py:384), Var($const104.51, fvutils.py:384)), kws=(), vararg=None) ['$106build_slice.52', '$106build_slice.53', '$const102.50', '$const104.51']
    row_cols_start_ind[$106build_slice.53] = $98call_method.48 ['$106build_slice.53', '$98call_method.48', 'row_cols_start_ind']
    $110load_global.54 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$110load_global.54']
    $112load_attr.55 = getattr(value=$110load_global.54, attr=zeros) ['$110load_global.54', '$112load_attr.55']
    $116load_attr.57 = getattr(value=sz, attr=size) ['$116load_attr.57', 'sz']
    $const118.58 = const(int, 1)             ['$const118.58']
    $120binary_add.59 = $116load_attr.57 + $const118.58 ['$116load_attr.57', '$120binary_add.59', '$const118.58']
    $122load_global.60 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$122load_global.60']
    $124load_attr.61 = getattr(value=$122load_global.60, attr=int32) ['$122load_global.60', '$124load_attr.61']
    $128call_function_kw.63 = call $112load_attr.55($120binary_add.59, func=$112load_attr.55, args=[Var($120binary_add.59, fvutils.py:390)], kws=[('dtype', Var($124load_attr.61, fvutils.py:390))], vararg=None) ['$112load_attr.55', '$120binary_add.59', '$124load_attr.61', '$128call_function_kw.63']
    full_block_starts_ind = $128call_function_kw.63 ['$128call_function_kw.63', 'full_block_starts_ind']
    $132load_global.64 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$132load_global.64']
    $134load_method.65 = getattr(value=$132load_global.64, attr=cumsum) ['$132load_global.64', '$134load_method.65']
    $136load_global.66 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$136load_global.66']
    $138load_method.67 = getattr(value=$136load_global.66, attr=square) ['$136load_global.66', '$138load_method.67']
    $142call_method.69 = call $138load_method.67(sz, func=$138load_method.67, args=[Var(sz, fvutils.py:374)], kws=(), vararg=None) ['$138load_method.67', '$142call_method.69', 'sz']
    $144call_method.70 = call $134load_method.65($142call_method.69, func=$134load_method.65, args=[Var($142call_method.69, fvutils.py:391)], kws=(), vararg=None) ['$134load_method.65', '$142call_method.69', '$144call_method.70']
    $const148.72 = const(int, 1)             ['$const148.72']
    $const150.73 = const(NoneType, None)     ['$const150.73']
    $152build_slice.74 = global(slice: <class 'slice'>) ['$152build_slice.74']
    $152build_slice.75 = call $152build_slice.74($const148.72, $const150.73, func=$152build_slice.74, args=(Var($const148.72, fvutils.py:391), Var($const150.73, fvutils.py:391)), kws=(), vararg=None) ['$152build_slice.74', '$152build_slice.75', '$const148.72', '$const150.73']
    full_block_starts_ind[$152build_slice.75] = $144call_method.70 ['$144call_method.70', '$152build_slice.75', 'full_block_starts_ind']
    $156load_global.76 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$156load_global.76']
    $158load_method.77 = getattr(value=$156load_global.76, attr=zeros) ['$156load_global.76', '$158load_method.77']
    $160load_global.78 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$160load_global.78']
    $162load_method.79 = getattr(value=$160load_global.78, attr=sum) ['$160load_global.78', '$162load_method.79']
    $164load_global.80 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$164load_global.80']
    $166load_method.81 = getattr(value=$164load_global.80, attr=square) ['$164load_global.80', '$166load_method.81']
    $170call_method.83 = call $166load_method.81(sz, func=$166load_method.81, args=[Var(sz, fvutils.py:374)], kws=(), vararg=None) ['$166load_method.81', '$170call_method.83', 'sz']
    $172call_method.84 = call $162load_method.79($170call_method.83, func=$162load_method.79, args=[Var($170call_method.83, fvutils.py:393)], kws=(), vararg=None) ['$162load_method.79', '$170call_method.83', '$172call_method.84']
    $174call_method.85 = call $158load_method.77($172call_method.84, func=$158load_method.77, args=[Var($172call_method.84, fvutils.py:393)], kws=(), vararg=None) ['$158load_method.77', '$172call_method.84', '$174call_method.85']
    inv_vals = $174call_method.85            ['$174call_method.85', 'inv_vals']
    jump 178                                 []
label 178:
    $180load_global.0 = global(range: <class 'range'>) ['$180load_global.0']
    $184load_attr.2 = getattr(value=sz, attr=size) ['$184load_attr.2', 'sz']
    $186call_function.3 = call $180load_global.0($184load_attr.2, func=$180load_global.0, args=[Var($184load_attr.2, fvutils.py:396)], kws=(), vararg=None) ['$180load_global.0', '$184load_attr.2', '$186call_function.3']
    $188get_iter.4 = getiter(value=$186call_function.3) ['$186call_function.3', '$188get_iter.4']
    $phi190.0 = $188get_iter.4               ['$188get_iter.4', '$phi190.0']
    jump 190                                 []
label 190:
    $190for_iter.1 = iternext(value=$phi190.0) ['$190for_iter.1', '$phi190.0']
    $190for_iter.2 = pair_first(value=$190for_iter.1) ['$190for_iter.1', '$190for_iter.2']
    $190for_iter.3 = pair_second(value=$190for_iter.1) ['$190for_iter.1', '$190for_iter.3']
    $phi192.1 = $190for_iter.2               ['$190for_iter.2', '$phi192.1']
    branch $190for_iter.3, 192, 378          ['$190for_iter.3']
label 192:
    iter1 = $phi192.1                        ['$phi192.1', 'iter1']
    $198binary_subscr.4 = getitem(value=sz, index=iter1) ['$198binary_subscr.4', 'iter1', 'sz']
    n = $198binary_subscr.4                  ['$198binary_subscr.4', 'n']
    $202load_global.5 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$202load_global.5']
    $204load_method.6 = getattr(value=$202load_global.5, attr=zeros) ['$202load_global.5', '$204load_method.6']
    $210build_tuple.9 = build_tuple(items=[Var(n, fvutils.py:397), Var(n, fvutils.py:397)]) ['$210build_tuple.9', 'n', 'n']
    $212call_method.10 = call $204load_method.6($210build_tuple.9, func=$204load_method.6, args=[Var($210build_tuple.9, fvutils.py:398)], kws=(), vararg=None) ['$204load_method.6', '$210build_tuple.9', '$212call_method.10']
    loc_mat = $212call_method.10             ['$212call_method.10', 'loc_mat']
    jump 216                                 []
label 216:
    $218load_global.1 = global(range: <class 'range'>) ['$218load_global.1']
    $222call_function.3 = call $218load_global.1(n, func=$218load_global.1, args=[Var(n, fvutils.py:397)], kws=(), vararg=None) ['$218load_global.1', '$222call_function.3', 'n']
    $224get_iter.4 = getiter(value=$222call_function.3) ['$222call_function.3', '$224get_iter.4']
    $phi226.1 = $224get_iter.4               ['$224get_iter.4', '$phi226.1']
    jump 226                                 []
label 226:
    $226for_iter.2 = iternext(value=$phi226.1) ['$226for_iter.2', '$phi226.1']
    $226for_iter.3 = pair_first(value=$226for_iter.2) ['$226for_iter.2', '$226for_iter.3']
    $226for_iter.4 = pair_second(value=$226for_iter.2) ['$226for_iter.2', '$226for_iter.4']
    $phi228.2 = $226for_iter.3               ['$226for_iter.3', '$phi228.2']
    branch $226for_iter.4, 228, 324          ['$226for_iter.4']
label 228:
    iter2 = $phi228.2                        ['$phi228.2', 'iter2']
    $234binary_subscr.5 = getitem(value=block_row_starts_ind, index=iter1) ['$234binary_subscr.5', 'block_row_starts_ind', 'iter1']
    $238binary_add.7 = $234binary_subscr.5 + iter2 ['$234binary_subscr.5', '$238binary_add.7', 'iter2']
    global_row = $238binary_add.7            ['$238binary_add.7', 'global_row']
    $246binary_subscr.10 = getitem(value=row_cols_start_ind, index=global_row) ['$246binary_subscr.10', 'global_row', 'row_cols_start_ind']
    data_counter = $246binary_subscr.10      ['$246binary_subscr.10', 'data_counter']
    jump 250                                 []
label 250:
    $252load_global.2 = global(range: <class 'range'>) ['$252load_global.2']
    $262binary_subscr.7 = getitem(value=block_row_starts_ind, index=iter1) ['$262binary_subscr.7', 'block_row_starts_ind', 'iter1']
    $264binary_add.8 = iter2 + $262binary_subscr.7 ['$262binary_subscr.7', '$264binary_add.8', 'iter2']
    $266binary_subscr.9 = getitem(value=num_cols_per_row, index=$264binary_add.8) ['$264binary_add.8', '$266binary_subscr.9', 'num_cols_per_row']
    $268call_function.10 = call $252load_global.2($266binary_subscr.9, func=$252load_global.2, args=[Var($266binary_subscr.9, fvutils.py:407)], kws=(), vararg=None) ['$252load_global.2', '$266binary_subscr.9', '$268call_function.10']
    $270get_iter.11 = getiter(value=$268call_function.10) ['$268call_function.10', '$270get_iter.11']
    $phi272.2 = $270get_iter.11              ['$270get_iter.11', '$phi272.2']
    jump 272                                 []
label 272:
    $272for_iter.3 = iternext(value=$phi272.2) ['$272for_iter.3', '$phi272.2']
    $272for_iter.4 = pair_first(value=$272for_iter.3) ['$272for_iter.3', '$272for_iter.4']
    $272for_iter.5 = pair_second(value=$272for_iter.3) ['$272for_iter.3', '$272for_iter.5']
    $phi274.3 = $272for_iter.4               ['$272for_iter.4', '$phi274.3']
    branch $272for_iter.5, 274, 320          ['$272for_iter.5']
label 274:
    _ = $phi274.3                            ['$phi274.3', '_']
    $280binary_subscr.6 = getitem(value=ind, index=data_counter) ['$280binary_subscr.6', 'data_counter', 'ind']
    $286binary_subscr.9 = getitem(value=block_row_starts_ind, index=iter1) ['$286binary_subscr.9', 'block_row_starts_ind', 'iter1']
    $288binary_subtract.10 = $280binary_subscr.6 - $286binary_subscr.9 ['$280binary_subscr.6', '$286binary_subscr.9', '$288binary_subtract.10']
    loc_col = $288binary_subtract.10         ['$288binary_subtract.10', 'loc_col']
    $296binary_subscr.13 = getitem(value=data, index=data_counter) ['$296binary_subscr.13', 'data', 'data_counter']
    $304build_tuple.17 = build_tuple(items=[Var(iter2, fvutils.py:400), Var(loc_col, fvutils.py:409)]) ['$304build_tuple.17', 'iter2', 'loc_col']
    loc_mat[$304build_tuple.17] = $296binary_subscr.13 ['$296binary_subscr.13', '$304build_tuple.17', 'loc_mat']
    $const310.19 = const(int, 1)             ['$const310.19']
    $312inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=data_counter, rhs=$const310.19, static_lhs=Undefined, static_rhs=Undefined) ['$312inplace_add.20', '$const310.19', 'data_counter']
    data_counter = $312inplace_add.20        ['$312inplace_add.20', 'data_counter']
    jump 272                                 []
label 320:
    jump 322                                 []
label 322:
    jump 226                                 []
label 324:
    jump 326                                 []
label 326:
    $326load_global.1 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$326load_global.1']
    $328load_method.2 = getattr(value=$326load_global.1, attr=ravel) ['$326load_global.1', '$328load_method.2']
    $330load_global.3 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$330load_global.3']
    $332load_attr.4 = getattr(value=$330load_global.3, attr=linalg) ['$330load_global.3', '$332load_attr.4']
    $334load_method.5 = getattr(value=$332load_attr.4, attr=inv) ['$332load_attr.4', '$334load_method.5']
    $338call_method.7 = call $334load_method.5(loc_mat, func=$334load_method.5, args=[Var(loc_mat, fvutils.py:398)], kws=(), vararg=None) ['$334load_method.5', '$338call_method.7', 'loc_mat']
    $340call_method.8 = call $328load_method.2($338call_method.7, func=$328load_method.2, args=[Var($338call_method.7, fvutils.py:416)], kws=(), vararg=None) ['$328load_method.2', '$338call_method.7', '$340call_method.8']
    inv_mat = $340call_method.8              ['$340call_method.8', 'inv_mat']
    $344load_global.9 = global(np: <module 'numpy' from '/home/haakon/.local/lib/python3.7/site-packages/numpy/__init__.py'>) ['$344load_global.9']
    $346load_method.10 = getattr(value=$344load_global.9, attr=arange) ['$344load_global.9', '$346load_method.10']
    $352binary_subscr.13 = getitem(value=full_block_starts_ind, index=iter1) ['$352binary_subscr.13', 'full_block_starts_ind', 'iter1']
    $const358.16 = const(int, 1)             ['$const358.16']
    $360binary_add.17 = iter1 + $const358.16 ['$360binary_add.17', '$const358.16', 'iter1']
    $362binary_subscr.18 = getitem(value=full_block_starts_ind, index=$360binary_add.17) ['$360binary_add.17', '$362binary_subscr.18', 'full_block_starts_ind']
    $364call_method.19 = call $346load_method.10($352binary_subscr.13, $362binary_subscr.18, func=$346load_method.10, args=[Var($352binary_subscr.13, fvutils.py:419), Var($362binary_subscr.18, fvutils.py:419)], kws=(), vararg=None) ['$346load_method.10', '$352binary_subscr.13', '$362binary_subscr.18', '$364call_method.19']
    loc_ind = $364call_method.19             ['$364call_method.19', 'loc_ind']
    inv_vals[loc_ind] = inv_mat              ['inv_mat', 'inv_vals', 'loc_ind']
    jump 190                                 []
label 378:
    jump 380                                 []
label 380:
    $382return_value.1 = cast(value=inv_vals) ['$382return_value.1', 'inv_vals']
    return $382return_value.1                ['$382return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=379)
           2	LOAD_FAST(arg=0, lineno=379)
           4	LOAD_FAST(arg=1, lineno=379)
           6	BINARY_SUBTRACT(arg=None, lineno=379)
           8	RETURN_VALUE(arg=None, lineno=379)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=379)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=379)
DEBUG:numba.byteflow:stack ['$_54binary_subscr_272.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=BINARY_SUBTRACT(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$_54binary_subscr_272.0', '$_64binary_subscr_334.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=379)
DEBUG:numba.byteflow:stack ['$6binary_subtract.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$_54binary_subscr_272.0'}), (4, {'res': '$_64binary_subscr_334.1'}), (6, {'lhs': '$_54binary_subscr_272.0', 'rhs': '$_64binary_subscr_334.1', 'res': '$6binary_subtract.2'}), (8, {'retval': '$6binary_subtract.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    _54binary_subscr_27 = arg(0, name=_54binary_subscr_27) ['_54binary_subscr_27']
    _64binary_subscr_33 = arg(1, name=_64binary_subscr_33) ['_64binary_subscr_33']
    $6binary_subtract.2 = _54binary_subscr_27 - _64binary_subscr_33 ['$6binary_subtract.2', '_54binary_subscr_27', '_64binary_subscr_33']
    $8return_value.3 = cast(value=$6binary_subtract.2) ['$6binary_subtract.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=374)
           6	CALL_FUNCTION(arg=1, lineno=374)
           8	RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$sz4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$6call_function.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sz4.1'}), (6, {'func': '$2load_global.0', 'args': ['$sz4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    sz = arg(0, name=sz)                     ['sz']
    $2load_global.0 = global(__ufunc_or_dufunc_0x5564f8bfba9: <ufunc 'square'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(sz, func=$2load_global.0, args=[Var(sz, fvutils.py:1)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'sz']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=374)
           6	CALL_FUNCTION(arg=1, lineno=374)
           8	RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=374)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$sz4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=374)
DEBUG:numba.byteflow:stack ['$6call_function.2']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.byteflow:keep phismap: {}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sz4.1'}), (6, {'func': '$2load_global.0', 'args': ['$sz4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    sz = arg(0, name=sz)                     ['sz']
    $2load_global.0 = global(__ufunc_or_dufunc_0x5564f8bfba9: <ufunc 'square'>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(sz, func=$2load_global.0, args=[Var(sz, fvutils.py:1)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'sz']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:porepy.numerics.fv.mpsa:max igrad: 424.72489143199044
INFO:porepy.numerics.fv.mpsa:Done with subproblem 1. Elapsed time 109.99269700050354
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [3.77112980e-11 2.40027879e-11 1.59011872e-11 ... 4.58404186e-11
 3.15084968e-11 2.48884970e-10]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-3.01690384e-11 -1.92022303e-11 -1.27209497e-11 ... -3.66723349e-11
 -2.52067974e-11 -1.99107976e-10]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.1389763355255127
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.86465808e-11 2.62985911e-11 2.51590061e-11 ... 1.06397289e-10
 2.68969078e-10 4.20264904e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-2.29172646e-11 -2.10388729e-11 -2.01272049e-11 ... -8.51178311e-11
 -2.15175263e-10 -3.36211923e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.16799378395080566
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.48419341e-11 8.78737721e-11 9.57485098e-11 ... 2.62285928e-11
 2.22197661e-11 2.96173603e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-1.98735473e-11 -7.02990177e-11 -7.65988078e-11 ... -2.09828743e-11
 -1.77758129e-11 -2.36938882e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.10690736770629883
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [1.31939005e-10 1.54176040e-10 1.29514739e-10 ... 8.42007528e-11
 5.49515861e-10 2.38375548e-10]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-1.05551204e-10 -1.23340832e-10 -1.03611791e-10 ... -6.73606023e-11
 -4.39612689e-10 -1.90700438e-10]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.166015625
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.93001851e-11 1.12798924e-10 1.17528377e-10 ... 4.56404792e-11
 8.03362842e-11 3.22302732e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-2.34401481e-11 -9.02391394e-11 -9.40227018e-11 ... -3.65123834e-11
 -6.42690274e-11 -2.57842186e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.0697486400604248
INFO:porepy.models.contact_mechanics_model:Done. Elapsed time 237.91872429847717
INFO:porepy.models.contact_mechanics_model:Initialize linear solver
INFO:porepy.models.contact_mechanics_model:Linear solver initialized. Elapsed time 3.2901763916015625e-05
INFO:porepy.viz.exporter:Construct 3d grid information using numba
INFO:porepy.numerics.nonlinear.nonlinear_solvers:Newton iteration number 0 of 10
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [3.77112980e-11 2.40027879e-11 1.59011872e-11 ... 4.58404186e-11
 3.15084968e-11 2.48884970e-10]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-3.01690384e-11 -1.92022303e-11 -1.27209497e-11 ... -3.66723349e-11
 -2.52067974e-11 -1.99107976e-10]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.13741827011108398
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.86465808e-11 2.62985911e-11 2.51590061e-11 ... 1.06397289e-10
 2.68969078e-10 4.20264904e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-2.29172646e-11 -2.10388729e-11 -2.01272049e-11 ... -8.51178311e-11
 -2.15175263e-10 -3.36211923e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.17304205894470215
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.48419341e-11 8.78737721e-11 9.57485098e-11 ... 2.62285928e-11
 2.22197661e-11 2.96173603e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-1.98735473e-11 -7.02990177e-11 -7.65988078e-11 ... -2.09828743e-11
 -1.77758129e-11 -2.36938882e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.10900592803955078
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [1.31939005e-10 1.54176040e-10 1.29514739e-10 ... 8.42007528e-11
 5.49515861e-10 2.38375548e-10]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-1.05551204e-10 -1.23340832e-10 -1.03611791e-10 ... -6.73606023e-11
 -4.39612689e-10 -1.90700438e-10]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.16513800621032715
DEBUG:root:Discretize contact mechanics interface law
INFO:porepy.numerics.contact_mechanics.contact_conditions:penetration
INFO:porepy.numerics.contact_mechanics.contact_conditions:-Tn + cn * un = 
 [2.93001851e-11 1.12798924e-10 1.17528377e-10 ... 4.56404792e-11
 8.03362842e-11 3.22302732e-11]
INFO:porepy.numerics.contact_mechanics.contact_conditions:un = 
 [0. 0. 0. ... 0. 0. 0.]
INFO:porepy.numerics.contact_mechanics.contact_conditions:sliding
INFO:porepy.numerics.contact_mechanics.contact_conditions:self._l2(-Tt + ct * ut) - bf = 
 [-2.34401481e-11 -9.02391394e-11 -9.40227018e-11 ... -3.65123834e-11
 -6.42690274e-11 -2.57842186e-11]
DEBUG:porepy.numerics.interface_laws.contact_mechanics_interface_laws:Done. Elapsed time 0.07192230224609375
DEBUG:porepy.models.contact_mechanics_model:Max element in A 9.62e+12
DEBUG:porepy.models.contact_mechanics_model:Max 3.25e+13 and min 1.00e+00 A sum.
INFO:porepy.models.contact_mechanics_model:Solve Ax=b using scipy
